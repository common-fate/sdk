syntax = "proto3";

package commonfate.access.v1alpha1;

import "commonfate/control/attest/v1alpha1/attestation.proto";
import "commonfate/access/v1alpha1/user.proto";
import "commonfate/authz/v1alpha1/uid.proto";
import "commonfate/access/v1alpha1/named_uid.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

service AuditLogService {
    rpc QueryAuditLogs(QueryAuditLogsRequest) returns (QueryAuditLogsResponse) {}
}

message QueryAuditLogsRequest {
    // Query for audit logs relating to a particular target
    commonfate.authz.v1alpha1.UID target = 1;

    // Query for audit logs performed by a particular actor
    // commonfate.authz.v1alpha1.UID actor = 2;

    // The token for the next page.
    string page_token = 10;
}

message QueryAuditLogsResponse {
  repeated AuditLog audit_logs = 1;
  string next_page_token = 2;
}

message AuditLogPreview {
    repeated AuditLog logs = 1;
    // An approximate count of activity events
    uint32 log_count = 12;
}

message AuditLog {
    // an ID of the audit log event
    string id = 1;

    // the action which occurred
    Action action = 2;

    // the actor which performed the action.
    User actor = 3;

    // the timestamp the action occurred at.
    google.protobuf.Timestamp occurred_at = 4;

    // the primary resource affected by the action.
    commonfate.authz.v1alpha1.UID primary_target = 5;
    
    // a human-friendly message describing the action.
    string message = 6;
    
    // additional context (omitted in user-facing audit logs,
    // as it contains sensitive information like IP addresses)
    google.protobuf.Struct context = 7;

    // all related resources affected by the action.
    repeated commonfate.authz.v1alpha1.UID all_targets = 8;
}

enum Action {
    ACTION_UNSPECIFIED = 0;

    // Access was activated
    ACTION_GRANT_REQUESTED = 1;

    // Access was automatically approved
    ACTION_GRANT_SELF_APPROVED = 2;

    // Access was approved
    ACTION_GRANT_APPROVED = 3;

    // Access was closed
    ACTION_GRANT_ACTIVATED = 4;

    // Access was provisioned
    ACTION_GRANT_PROVISIONED = 5;

    // Access was closed
    ACTION_GRANT_EXTENDED = 6;

    // Access was deprovisioned
    ACTION_GRANT_DEPROVISIONED = 7;

    // A grant was cancelled before being activated.
    ACTION_GRANT_CANCELLED = 8;

    // An active grant was revoked.
    ACTION_GRANT_REVOKED = 9;

    // An error occurred
    ACTION_GRANT_ERROR = 10;
}