syntax = "proto3";

package commonfate.access.v1alpha1;

import "commonfate/control/attest/v1alpha1/attestation.proto";
import "commonfate/access/v1alpha1/user.proto";
import "commonfate/entity/v1alpha1/entity.proto";
import "commonfate/entity/v1alpha1/eid.proto";
import "commonfate/access/v1alpha1/named_eid.proto";
import "commonfate/access/v1alpha1/audit_logs.proto";
import "commonfate/entity/v1alpha1/child_relation.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";


message ProvisionRequest {
    // The ID of the Grant.
    commonfate.entity.v1alpha1.EID grant = 1;

    commonfate.entity.v1alpha1.Entity principal = 2;

    // DomainPrincipal is the principal to grant access to,
	// mapped to the identity domain of the system that we're provisioning in.
	//
	// For example, instead of sending a user's email address, we send the
	// ID of the user in AWS IAM Identity Center.
	//
	// This field may be empty if Common Fate fails to map the principal.
	// A well-designed provisioner should attempt to fall back on data from
	// the core principal entity instead to provision access.
    commonfate.entity.v1alpha1.Entity domain_principal = 3;

    commonfate.entity.v1alpha1.Entity target = 4;
    
    commonfate.entity.v1alpha1.Entity role = 5;
}

message ProvisionResponse {
    repeated commonfate.entity.v1alpha1.Entity entities = 1;
	repeated commonfate.entity.v1alpha1.ChildRelation child_relations = 2;
}