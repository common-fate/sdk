syntax = "proto3";

package commonfate.control.filters.v1alpha1;

import "commonfate/authz/v1alpha1/evaluation.proto";
import "commonfate/authz/v1alpha1/read_only.proto";
import "commonfate/entity/v1alpha1/eid.proto";
import "google/protobuf/timestamp.proto";

// Filters events with a particular authorization decision
message DecisionFilter {
  commonfate.authz.v1alpha1.Decision decision = 1;
}

// Filters event by a particular key/value tag associated when them.
// Will filter for either events which match the tag, or do not match the tag,
// based on the 'comparison' value.
message TagFilter {
  string key = 1;
  string value = 2;
  BoolComparison comparison = 3;
}

// Filters events where the principal/action/resource matches particular entities.
message EntityFilter {
  // IDs of entities to filter for. Will filter for a principal/action/resource matching any of these entities.
  repeated commonfate.entity.v1alpha1.EID ids = 1;
  BoolComparison comparison = 2;
}

// Filters events where the principal/action/resource matches particular entity types.
message EntityTypeFilter {
  // types of entities to filter for. Will filter for a principal/action/resource matching any of these entities.
  repeated string types = 1;
  BoolComparison comparison = 2;
}

// Filters events based on when they occurred.
message OccurredAtFilter {
  google.protobuf.Timestamp time = 1;
  TimeComparison comparison = 2;
}

enum TimeComparison {
  TIME_COMPARISON_UNSPECIFIED = 0;

  // Events which occurred before the specified time.
  TIME_COMPARISON_BEFORE = 1;

  // Events which occurred after the specified time.
  TIME_COMPARISON_AFTER = 2;
}

enum BoolComparison {
  BOOL_COMPARISON_UNSPECIFIED = 0;

  // Equal to the provided value.
  BOOL_COMPARISON_EQUAL = 1;

  // Not equal to the provided value.
  BOOL_COMPARISON_NOT_EQUAL = 2;
}
