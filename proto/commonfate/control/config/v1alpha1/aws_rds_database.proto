syntax = "proto3";
package commonfate.control.config.v1alpha1;

import "commonfate/authz/v1alpha1/read_only.proto";

service AWSRDSDatabaseService {
  rpc CreateAWSRDSDatabase(CreateAWSRDSDatabaseRequest) returns (CreateAWSRDSDatabaseResponse) {}
  rpc GetAWSRDSDatabase(GetAWSRDSDatabaseRequest) returns (GetAWSRDSDatabaseResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }
  rpc UpdateAWSRDSDatabase(UpdateAWSRDSDatabaseRequest) returns (UpdateAWSRDSDatabaseResponse) {}
  rpc DeleteAWSRDSDatabase(DeleteAWSRDSDatabaseRequest) returns (DeleteAWSRDSDatabaseResponse) {}
}

message CreateAWSRDSDatabaseRequest {
  // target
  string name = 1;
  // role
  string database_user = 2;
  string proxy_instance_account = 3;
  string proxy_instance_region = 4;
}

message AWSRDSDatabase {
  string id = 1;
  // target
  string name = 2;
  // role
  string database_user = 3;
  string proxy_instance_account = 4;
  string proxy_instance_region = 5;
}

message CreateAWSRDSDatabaseResponse {
  AWSRDSDatabase aws_rds_database = 1;
}

message GetAWSRDSDatabaseRequest {
  string id = 1;
}

message GetAWSRDSDatabaseResponse {
  AWSRDSDatabase aws_rds_database = 1;
}

message UpdateAWSRDSDatabaseRequest {
  AWSRDSDatabase aws_rds_database = 1;
}

message UpdateAWSRDSDatabaseResponse {
  AWSRDSDatabase aws_rds_database = 1;
}

message DeleteAWSRDSDatabaseRequest {
  string id = 1;
}

message DeleteAWSRDSDatabaseResponse {
  string id = 1;
}
