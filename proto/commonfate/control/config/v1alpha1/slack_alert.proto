syntax = "proto3";
package commonfate.control.config.v1alpha1;

import "commonfate/authz/v1alpha1/read_only.proto";
import "google/protobuf/duration.proto";

service SlackAlertService {
  rpc CreateSlackAlert(CreateSlackAlertRequest) returns (CreateSlackAlertResponse) {}
  rpc GetSlackAlert(GetSlackAlertRequest) returns (GetSlackAlertResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }
  rpc UpdateSlackAlert(UpdateSlackAlertRequest) returns (UpdateSlackAlertResponse) {}
  rpc DeleteSlackAlert(DeleteSlackAlertRequest) returns (DeleteSlackAlertResponse) {}
}

message CreateSlackAlertRequest {
  string workflow_id = 2;
  string slack_channel_id = 3;
  string slack_workspace_id = 4;
  optional string integration_id = 5;
  bool use_web_console_for_approve_action = 6;
  bool send_direct_messages_to_approvers = 7;
  bool disable_interactivity_handlers = 8;
  google.protobuf.Duration notify_expiry_in_seconds = 9;
  bool send_for_auto_approved_requests = 10;
}

message SlackAlert {
  string id = 1;
  string workflow_id = 2;
  string slack_channel_id = 3;
  string slack_workspace_id = 4;
  optional string integration_id = 5;
  bool use_web_console_for_approve_action = 6;
  bool send_direct_messages_to_approvers = 7;
  // Disables all webhook handlers for the Slack integration.
  // All buttons in the Slack integration will link the user to Common Fate URLs
  // rather than being directly interactive.
  // This is useful when deploying Common Fate in a VPC
  // with restricted network ingress.
  //
  // If set to true, this setting takes priority over 'use_web_console_for_activate_action'.
  bool disable_interactivity_handlers = 8;
  // if specified, it will notify the user the set time before the access expires
  google.protobuf.Duration notify_expiry_in_seconds = 9;

  bool diable_for_auto_approved_requests = 10;

}

message CreateSlackAlertResponse {
  SlackAlert alert = 1;
}

message GetSlackAlertRequest {
  string id = 1;
}

message GetSlackAlertResponse {
  SlackAlert alert = 1;
}

message UpdateSlackAlertRequest {
  SlackAlert alert = 1;
}

message UpdateSlackAlertResponse {
  SlackAlert alert = 1;
}

message DeleteSlackAlertRequest {
  string id = 1;
}

message DeleteSlackAlertResponse {
  string id = 1;
}
