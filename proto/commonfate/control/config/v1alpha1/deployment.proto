syntax = "proto3";
package commonfate.control.config.v1alpha1;

import "commonfate/authz/v1alpha1/action.proto";

service DeploymentService {
  // Overridden for backwards compatability
  option (commonfate.authz.v1alpha1.namespace) = "CF::Deployment";
  rpc GetDeploymentConfig(GetDeploymentConfigRequest) returns (GetDeploymentConfigResponse) {
    option (commonfate.authz.v1alpha1.action_options) = {read_only: true};
  }
  rpc GetDeploymentSecret(GetDeploymentSecretRequest) returns (GetDeploymentSecretResponse) {
    option (commonfate.authz.v1alpha1.action_options) = {read_only: true};
  }
}

message GetDeploymentConfigRequest {}

message GetDeploymentConfigResponse {
  DeploymentConfig deployment_config = 1;
}
message DeploymentConfig {
  string saml_sso_acs_url = 1;
  string saml_sso_entity_id = 2;
  string terraform_oidc_client_id = 3;
  string read_only_oidc_client_id = 4;
  string provisioner_oidc_client_id = 5;
  string oidc_issuer = 6;
}
enum DeploymentSecret {
  DEPLOYMENT_SECRET_UNSPECIFIED = 0;
  DEPLOYMENT_SECRET_TERRAFORM_OIDC_CLIENT_SECRET = 1;
  DEPLOYMENT_SECRET_READONLY_OIDC_CLIENT_SECRET = 2;
  DEPLOYMENT_SECRET_PROVISIONER_OIDC_CLIENT_SECRET = 3;
}
message GetDeploymentSecretRequest {
  DeploymentSecret secret = 1;
}

message GetDeploymentSecretResponse {
  string secret = 1;
}
