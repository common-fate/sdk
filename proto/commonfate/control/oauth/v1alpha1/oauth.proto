syntax = "proto3";
package commonfate.control.oauth.v1alpha1;
import "commonfate/authz/v1alpha1/read_only.proto";


service OAuthService {
    // rpc CreatePagerDutyIntegration(CreatePagerDutyIntegrationRequest) returns (CreatePagerDutyIntegrationResponse) {}
    rpc GetPagerDutyIntegration(GetPagerDutyIntegrationRequest) returns (GetPagerDutyIntegrationResponse) {
        option(commonfate.authz.v1alpha1.read_only) = true;
    }
    rpc RemovePagerDutyIntegration(RemovePagerDutyIntegrationRequest) returns (RemovePagerDutyIntegrationResponse) {}

    // rpc CreateSlackIntegration(CreateSlackIntegrationRequest) returns (CreateSlackIntegrationResponse) {}
    rpc GetSlackIntegration(GetSlackIntegrationRequest) returns (GetSlackIntegrationResponse) {
        option(commonfate.authz.v1alpha1.read_only) = true;
    }
    rpc RemoveSlackIntegration(RemoveSlackIntegrationRequest) returns (RemoveSlackIntegrationResponse) {}
    
}


message CreatePagerDutyIntegrationRequest {
   
}

message CreatePagerDutyIntegrationResponse {
    string uri = 1;
}

message GetPagerDutyIntegrationRequest {
   
}

message GetPagerDutyIntegrationResponse {
    bool active = 1;
}

message RemovePagerDutyIntegrationRequest {
   
}

message RemovePagerDutyIntegrationResponse {
    bool success = 1;
}

message CreateSlackIntegrationRequest {
   
}

message CreateSlackIntegrationResponse {
    string uri = 1;
}

message GetSlackIntegrationRequest {
   
}

message GetSlackIntegrationResponse {
    bool active = 1;
}

message RemoveSlackIntegrationRequest {
   
}

message RemoveSlackIntegrationResponse {
    bool success = 1;
}