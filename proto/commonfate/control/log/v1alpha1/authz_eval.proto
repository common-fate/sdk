syntax = "proto3";

package commonfate.control.log.v1alpha1;

import "commonfate/authz/v1alpha1/evaluation.proto";
import "commonfate/authz/v1alpha1/read_only.proto";
import "commonfate/control/filters/v1alpha1/filters.proto";
import "commonfate/entity/v1alpha1/eid.proto";
import "google/protobuf/timestamp.proto";

// EvalService is the API for auditing authorization evaluations made by authz.
service EvaluationService {
  // Query for historical authorization evaluations.
  rpc QueryEvaluations(QueryEvaluationsRequest) returns (QueryEvaluationsResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }

  // Returns an authorization evaluation by a particular ID.
  rpc GetEvaluation(GetEvaluationRequest) returns (GetEvaluationResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }

  // Fetches debug information about the evaluation of a particular decision
  rpc DebugEvaluation(DebugEvaluationRequest) returns (DebugEvaluationResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }
}

message QueryEvaluationsRequest {
  // The token for the next page.
  string page_token = 1;

  // Filters for the query. Events matching *all* filters will be returned.
  repeated Filter filters = 2;
}

message Filter {
  oneof filter {
    commonfate.control.filters.v1alpha1.TagFilter tag = 1;
    commonfate.control.filters.v1alpha1.OccurredAtFilter occurred_at = 2;
    commonfate.control.filters.v1alpha1.EntityFilter principal = 3;
    commonfate.control.filters.v1alpha1.EntityFilter action = 4;
    commonfate.control.filters.v1alpha1.EntityFilter resource = 5;
    commonfate.control.filters.v1alpha1.DecisionFilter decision = 6;
    commonfate.control.filters.v1alpha1.EntityTypeFilter principal_type = 7;
    commonfate.control.filters.v1alpha1.EntityTypeFilter action_type = 8;
    commonfate.control.filters.v1alpha1.EntityTypeFilter resource_type = 9;
  }
}

message QueryEvaluationsResponse {
  repeated commonfate.authz.v1alpha1.Evaluation evaluations = 1;
  string next_page_token = 2;
}

message GetEvaluationRequest {
  // The authorization evaluation ID.
  string id = 1;
}

message GetEvaluationResponse {
  commonfate.authz.v1alpha1.Evaluation evaluation = 1;
}

message DebugEvaluationRequest {
  string id = 1;
}

message DebugEvaluationResponse {
  commonfate.authz.v1alpha1.DebugEvaluation debug_evaluation = 1;
}
