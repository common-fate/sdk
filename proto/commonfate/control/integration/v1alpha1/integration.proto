syntax = "proto3";
package commonfate.control.integration.v1alpha1;

import "commonfate/access/v1alpha1/diagnostic.proto";
import "commonfate/authz/v1alpha1/read_only.proto";
import "commonfate/control/integration/v1alpha1/auth0.proto";
import "commonfate/control/integration/v1alpha1/aws_idc.proto";
import "commonfate/control/integration/v1alpha1/aws_proxy.proto";
import "commonfate/control/integration/v1alpha1/datastax.proto";
import "commonfate/control/integration/v1alpha1/entra.proto";
import "commonfate/control/integration/v1alpha1/gcp.proto";
import "commonfate/control/integration/v1alpha1/okta.proto";
import "commonfate/control/integration/v1alpha1/opsgenie.proto";
import "commonfate/control/integration/v1alpha1/pagerduty.proto";
import "commonfate/control/integration/v1alpha1/s3_log_destination.proto";
import "commonfate/control/integration/v1alpha1/slack.proto";
import "commonfate/control/integration/v1alpha1/webhook.proto";

service IntegrationService {
  rpc CreateIntegration(CreateIntegrationRequest) returns (CreateIntegrationResponse) {}
  rpc UpdateIntegration(UpdateIntegrationRequest) returns (UpdateIntegrationResponse) {}
  rpc GetIntegration(GetIntegrationRequest) returns (GetIntegrationResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }
  rpc DeleteIntegration(DeleteIntegrationRequest) returns (DeleteIntegrationResponse) {}
  rpc ListIntegrations(ListIntegrationsRequest) returns (ListIntegrationsResponse) {}
  // RegisterProxy is used by the proxy integration to self register
  // This operation will create new resources, update existing resources and delete orphaned resources.
  rpc RegisterProxy(RegisterProxyRequest) returns (RegisterProxyResponse) {}

  rpc CreateSecret(CreateSecretRequest) returns (CreateSecretResponse) {}
  rpc DeleteSecret(DeleteSecretRequest) returns (DeleteSecretResponse) {}
  rpc ListSecrets(ListSecretsRequest) returns (ListSecretsResponse) {}
}

message CreateSecretRequest {
  string name = 1;
  string secret = 2;
}

message CreateSecretResponse {
  string secret_arn = 1;
}
message DeleteSecretRequest {
  string secret_arn = 1;
}

message DeleteSecretResponse {}

message ListSecretsRequest {}

message ListSecretsResponse {
  repeated string secret_arns = 1;
}

message ListIntegrationsRequest {
  // The token for the next page.
  string page_token = 1;
}

message ListIntegrationsResponse {
  repeated Integration integrations = 1;
  string next_page_token = 2;
}

message RegisterProxyRequest {
  string integration_id = 1;
  repeated Resource resources = 2;
  oneof instance_config {
    AWSECSProxyInstanceConfig aws_ecs_proxy_instance_config = 3;
  }
}

message RegisterProxyResponse {}

message Resource {
  oneof resource {
    AWSRDSDatabase aws_rds_database = 1;
  }
}
message CreateIntegrationRequest {
  string name = 1;
  Config config = 2;
}

message Config {
  oneof config {
    GCP gcp = 1;
    AWSIDC aws_idc = 2;
    Slack slack = 3;
    PagerDuty pagerduty = 4;
    OpsGenie opsgenie = 5;
    Entra entra = 6;
    Okta okta = 8;
    DataStax datastax = 9;
    Webhook webhook = 10;
    Auth0 auth0 = 11;
    S3LogDestination s3_log_destination = 12;
    AWSProxy aws_proxy = 13;
  }
}

message Integration {
  reserved 'type';
  reserved 3;

  string id = 1;
  string name = 2;
  Status status = 4;
  repeated commonfate.access.v1alpha1.Diagnostic diagnostics = 5;
  Config config = 6;
  string setup_url = 7;
}

message CreateIntegrationResponse {
  Integration integration = 1;
}

enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_PENDING_SETUP = 1;
  STATUS_HEALTHY = 2;
  STATUS_UNHEALTHY = 3;
}

message GetIntegrationRequest {
  string id = 1;
}

message GetIntegrationResponse {
  Integration integration = 1;
}

message UpdateIntegrationRequest {
  Integration integration = 1;
}

message UpdateIntegrationResponse {
  Integration integration = 1;
}

message DeleteIntegrationRequest {
  string id = 1;
}

message DeleteIntegrationResponse {
  string id = 1;
}
