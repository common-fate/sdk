syntax = "proto3";
package commonfate.control.integration.v1alpha1;

import "commonfate/authz/v1alpha1/read_only.proto";
import "commonfate/control/integration/v1alpha1/aws_proxy.proto";
import "commonfate/control/integration/v1alpha1/proxy_resource.proto";

service ProxyService {
  //CRUD operations for proxy resource terraform provider resource
  rpc CreateProxyRdsResource(CreateProxyRdsResourceRequest) returns (CreateProxyRdsResourceResponse) {}
  rpc UpdateProxyRdsResource(UpdateProxyRdsResourceRequest) returns (UpdateProxyRdsResourceResponse) {}
  rpc DeleteProxyRdsResource(DeleteProxyRdsResourceRequest) returns (DeleteProxyRdsResourceResponse) {}
  rpc GetProxyRdsResource(GetProxyRdsResourceRequest) returns (GetProxyRdsResourceResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }

  rpc CreateProxyEksClusterResource(CreateProxyEksClusterResourceRequest) returns (CreateProxyEksClusterResourceResponse) {}
  rpc UpdateProxyEksClusterResource(UpdateProxyEksClusterResourceRequest) returns (UpdateProxyEksClusterResourceResponse) {}
  rpc DeleteProxyEksClusterResource(DeleteProxyEksClusterResourceRequest) returns (DeleteProxyEksClusterResourceResponse) {}
  rpc GetProxyEksClusterResource(GetProxyEksClusterResourceRequest) returns (GetProxyEksClusterResourceResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }

  //CRUD operations for proxy terraform provider resource
  rpc CreateProxy(CreateProxyRequest) returns (CreateProxyResponse) {}
  rpc UpdateProxy(UpdateProxyRequest) returns (UpdateProxyResponse) {}
  rpc DeleteProxy(DeleteProxyRequest) returns (DeleteProxyResponse) {}
  rpc GetProxy(GetProxyRequest) returns (GetProxyResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }

  //Used by the proxy to get resources
  rpc ListProxyResources(ListProxyResourcesRequest) returns (ListProxyResourcesResponse) {
    option (commonfate.authz.v1alpha1.read_only) = true;
  }
}

message CreateProxyRequest {
  string integration_id = 1;
  repeated Resource resources = 2;
  oneof instance_config {
    AWSECSProxyInstanceConfig aws_ecs_proxy_instance_config = 3;
  }
  string id = 4;
}

message CreateProxyResponse {
  string id = 4;

  string integration_id = 1;
  oneof instance_config {
    AWSECSProxyInstanceConfig aws_ecs_proxy_instance_config = 3;
  }
}

message GetProxyRequest {
  string id = 1;
}

message GetProxyResponse {
  string id = 1;
  oneof instance_config {
    AWSECSProxyInstanceConfig aws_ecs_proxy_instance_config = 4;
  }
}

message UpdateProxyRequest {
  string id = 1;
  oneof instance_config {
    AWSECSProxyInstanceConfig aws_ecs_proxy_instance_config = 4;
  }
}

message UpdateProxyResponse {
  string id = 1;
  oneof instance_config {
    AWSECSProxyInstanceConfig aws_ecs_proxy_instance_config = 4;
  }
}

message DeleteProxyRequest {
  string id = 1;
}

message DeleteProxyResponse {
  string id = 1;
}

message ListProxyResourcesRequest {
  string proxy_id = 1;
}

message ListProxyResourcesResponse {
  string proxy_id = 1;
  repeated Resource resources = 2;
}

message CreateProxyRdsResourceRequest {
  string proxy_id = 1;
  AWSRDSDatabase rds_database = 2;
}

message CreateProxyRdsResourceResponse {
  string id = 1;
  string proxy_id = 2;
  AWSRDSDatabase rds_database = 3;
}

message GetProxyRdsResourceRequest {
  string id = 1;
}

message GetProxyRdsResourceResponse {
  string id = 1;
  AWSRDSDatabase rds_database = 2;
}

message UpdateProxyRdsResourceRequest {
  string id = 1;
  string proxy_id = 2;

  AWSRDSDatabase rds_database = 3;
}

message UpdateProxyRdsResourceResponse {
  string id = 1;
  string proxy_id = 2;

  AWSRDSDatabase rds_database = 3;
}

message DeleteProxyRdsResourceRequest {
  string id = 1;
}

message DeleteProxyRdsResourceResponse {
  string id = 1;
}

message CreateProxyEksClusterResourceRequest {
  string proxy_id = 1;
  AWSEKSCluster eks_cluster = 2;
}

message CreateProxyEksClusterResourceResponse {
  string id = 1;
  string proxy_id = 2;
  AWSEKSCluster eks_cluster = 3;
}

message GetProxyEksClusterResourceRequest {
  string id = 1;
}

message GetProxyEksClusterResourceResponse {
  string id = 1;
  AWSEKSCluster eks_cluster = 2;
}

message UpdateProxyEksClusterResourceRequest {
  string id = 1;
  string proxy_id = 2;

  AWSEKSCluster eks_cluster = 3;
}

message UpdateProxyEksClusterResourceResponse {
  string id = 1;
  string proxy_id = 2;

  AWSEKSCluster eks_cluster = 3;
}

message DeleteProxyEksClusterResourceRequest {
  string id = 1;
}

message DeleteProxyEksClusterResourceResponse {
  string id = 1;
}
