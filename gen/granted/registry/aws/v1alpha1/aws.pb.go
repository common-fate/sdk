// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: granted/registry/aws/v1alpha1/aws.proto

package awsv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetProfileForAccountAndRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the AWS account, e.g. '123456789012'.
	//
	// Clients may specify the account ID or the account name
	// to indicate which account to obtain a profile for.
	//
	// If both fields are provided, the server should use the account ID.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The name of the AWS account.
	//
	// Clients may specify the account ID or the account name
	// to indicate which account to obtain a profile for.
	//
	// If both fields are provided, the server should use the account ID.
	//
	// A profile registry server MAY reject requests containing
	// only the account name, if the server does not have the capability
	// to look up accounts based on their name. In this case,
	// Profile Registry clients should show an error to the user indicating
	// that the ID must be specified instead.
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// The name of the role, e.g. 'ViewOnlyAccess'.
	RoleName string `protobuf:"bytes,3,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *GetProfileForAccountAndRoleRequest) Reset() {
	*x = GetProfileForAccountAndRoleRequest{}
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProfileForAccountAndRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileForAccountAndRoleRequest) ProtoMessage() {}

func (x *GetProfileForAccountAndRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileForAccountAndRoleRequest.ProtoReflect.Descriptor instead.
func (*GetProfileForAccountAndRoleRequest) Descriptor() ([]byte, []int) {
	return file_granted_registry_aws_v1alpha1_aws_proto_rawDescGZIP(), []int{0}
}

func (x *GetProfileForAccountAndRoleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetProfileForAccountAndRoleRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetProfileForAccountAndRoleRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type GetProfileForAccountAndRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The profile matching the requested account and role combination.
	Profile *Profile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetProfileForAccountAndRoleResponse) Reset() {
	*x = GetProfileForAccountAndRoleResponse{}
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProfileForAccountAndRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileForAccountAndRoleResponse) ProtoMessage() {}

func (x *GetProfileForAccountAndRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileForAccountAndRoleResponse.ProtoReflect.Descriptor instead.
func (*GetProfileForAccountAndRoleResponse) Descriptor() ([]byte, []int) {
	return file_granted_registry_aws_v1alpha1_aws_proto_rawDescGZIP(), []int{1}
}

func (x *GetProfileForAccountAndRoleResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type ListProfilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A token to use for pagination.
	// You can obtain a token from 'ListProfilesResponse'
	// by taking the 'next_page_token'.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListProfilesRequest) Reset() {
	*x = ListProfilesRequest{}
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesRequest) ProtoMessage() {}

func (x *ListProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListProfilesRequest) Descriptor() ([]byte, []int) {
	return file_granted_registry_aws_v1alpha1_aws_proto_rawDescGZIP(), []int{2}
}

func (x *ListProfilesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListProfilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of available profiles.
	Profiles []*Profile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
	// The token to use to fetch the next page.
	// Will be empty if there is no next page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListProfilesResponse) Reset() {
	*x = ListProfilesResponse{}
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesResponse) ProtoMessage() {}

func (x *ListProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesResponse.ProtoReflect.Descriptor instead.
func (*ListProfilesResponse) Descriptor() ([]byte, []int) {
	return file_granted_registry_aws_v1alpha1_aws_proto_rawDescGZIP(), []int{3}
}

func (x *ListProfilesResponse) GetProfiles() []*Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *ListProfilesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// An AWS profile. By default, these are stored in ~/.aws/config.
//
// For example:
//
// ```
// [profile dev]
// granted_sso_start_url      = https://d-12345abcdef.awsapps.com/start
// granted_sso_region         = us-east-1
// granted_sso_account_id     = 123456789012
// granted_sso_role_name      = AWSAdministratorAccess
// ```
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The proposed name for the profile.
	// If the name conflicts with an existing profile,
	// a client may override this name or add a prefix to it.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Attributes associated with the profile.
	Attributes []*ProfileAttributes `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_granted_registry_aws_v1alpha1_aws_proto_rawDescGZIP(), []int{4}
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetAttributes() []*ProfileAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Attributes on a profile. These are the individual key/value pairs,
// such as 'granted_sso_region = us-east-1'.
//
// Profile attributes are not authoritative and clients may override these
// or add additional attributes as required. For example, a 'region' attribute
// may be overridden by a user, or the 'credential_process' attribute
// may be overridden to specify a particular credential process binary path.
type ProfileAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The attribute key.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The attribute value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProfileAttributes) Reset() {
	*x = ProfileAttributes{}
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileAttributes) ProtoMessage() {}

func (x *ProfileAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_granted_registry_aws_v1alpha1_aws_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileAttributes.ProtoReflect.Descriptor instead.
func (*ProfileAttributes) Descriptor() ([]byte, []int) {
	return file_granted_registry_aws_v1alpha1_aws_proto_rawDescGZIP(), []int{5}
}

func (x *ProfileAttributes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ProfileAttributes) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_granted_registry_aws_v1alpha1_aws_proto protoreflect.FileDescriptor

var file_granted_registry_aws_v1alpha1_aws_proto_rawDesc = []byte{
	0x0a, 0x27, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x61, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x64, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x83, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x67,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x82, 0x01,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x64, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x6f, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x50, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x32, 0xbc, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa6, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x41, 0x2e, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42,
	0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x64, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x8e, 0x02, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x08, 0x41, 0x77, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b,
	0x61, 0x77, 0x73, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x52,
	0x41, 0xaa, 0x02, 0x1d, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x77, 0x73, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xca, 0x02, 0x1d, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5c, 0x41, 0x77, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xe2, 0x02, 0x29, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x5c, 0x41, 0x77, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x20,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x3a, 0x3a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x3a, 0x3a, 0x41, 0x77, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_granted_registry_aws_v1alpha1_aws_proto_rawDescOnce sync.Once
	file_granted_registry_aws_v1alpha1_aws_proto_rawDescData = file_granted_registry_aws_v1alpha1_aws_proto_rawDesc
)

func file_granted_registry_aws_v1alpha1_aws_proto_rawDescGZIP() []byte {
	file_granted_registry_aws_v1alpha1_aws_proto_rawDescOnce.Do(func() {
		file_granted_registry_aws_v1alpha1_aws_proto_rawDescData = protoimpl.X.CompressGZIP(file_granted_registry_aws_v1alpha1_aws_proto_rawDescData)
	})
	return file_granted_registry_aws_v1alpha1_aws_proto_rawDescData
}

var file_granted_registry_aws_v1alpha1_aws_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_granted_registry_aws_v1alpha1_aws_proto_goTypes = []any{
	(*GetProfileForAccountAndRoleRequest)(nil),  // 0: granted.registry.aws.v1alpha1.GetProfileForAccountAndRoleRequest
	(*GetProfileForAccountAndRoleResponse)(nil), // 1: granted.registry.aws.v1alpha1.GetProfileForAccountAndRoleResponse
	(*ListProfilesRequest)(nil),                 // 2: granted.registry.aws.v1alpha1.ListProfilesRequest
	(*ListProfilesResponse)(nil),                // 3: granted.registry.aws.v1alpha1.ListProfilesResponse
	(*Profile)(nil),                             // 4: granted.registry.aws.v1alpha1.Profile
	(*ProfileAttributes)(nil),                   // 5: granted.registry.aws.v1alpha1.ProfileAttributes
}
var file_granted_registry_aws_v1alpha1_aws_proto_depIdxs = []int32{
	4, // 0: granted.registry.aws.v1alpha1.GetProfileForAccountAndRoleResponse.profile:type_name -> granted.registry.aws.v1alpha1.Profile
	4, // 1: granted.registry.aws.v1alpha1.ListProfilesResponse.profiles:type_name -> granted.registry.aws.v1alpha1.Profile
	5, // 2: granted.registry.aws.v1alpha1.Profile.attributes:type_name -> granted.registry.aws.v1alpha1.ProfileAttributes
	0, // 3: granted.registry.aws.v1alpha1.ProfileRegistryService.GetProfileForAccountAndRole:input_type -> granted.registry.aws.v1alpha1.GetProfileForAccountAndRoleRequest
	2, // 4: granted.registry.aws.v1alpha1.ProfileRegistryService.ListProfiles:input_type -> granted.registry.aws.v1alpha1.ListProfilesRequest
	1, // 5: granted.registry.aws.v1alpha1.ProfileRegistryService.GetProfileForAccountAndRole:output_type -> granted.registry.aws.v1alpha1.GetProfileForAccountAndRoleResponse
	3, // 6: granted.registry.aws.v1alpha1.ProfileRegistryService.ListProfiles:output_type -> granted.registry.aws.v1alpha1.ListProfilesResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_granted_registry_aws_v1alpha1_aws_proto_init() }
func file_granted_registry_aws_v1alpha1_aws_proto_init() {
	if File_granted_registry_aws_v1alpha1_aws_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_granted_registry_aws_v1alpha1_aws_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_granted_registry_aws_v1alpha1_aws_proto_goTypes,
		DependencyIndexes: file_granted_registry_aws_v1alpha1_aws_proto_depIdxs,
		MessageInfos:      file_granted_registry_aws_v1alpha1_aws_proto_msgTypes,
	}.Build()
	File_granted_registry_aws_v1alpha1_aws_proto = out.File
	file_granted_registry_aws_v1alpha1_aws_proto_rawDesc = nil
	file_granted_registry_aws_v1alpha1_aws_proto_goTypes = nil
	file_granted_registry_aws_v1alpha1_aws_proto_depIdxs = nil
}
