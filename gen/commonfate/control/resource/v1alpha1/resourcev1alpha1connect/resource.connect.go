// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: commonfate/control/resource/v1alpha1/resource.proto

package resourcev1alpha1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1alpha1 "github.com/common-fate/sdk/gen/commonfate/control/resource/v1alpha1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// ResourceServiceName is the fully-qualified name of the ResourceService service.
	ResourceServiceName = "commonfate.control.resource.v1alpha1.ResourceService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ResourceServiceListTypesProcedure is the fully-qualified name of the ResourceService's ListTypes
	// RPC.
	ResourceServiceListTypesProcedure = "/commonfate.control.resource.v1alpha1.ResourceService/ListTypes"
	// ResourceServiceQueryResourcesProcedure is the fully-qualified name of the ResourceService's
	// QueryResources RPC.
	ResourceServiceQueryResourcesProcedure = "/commonfate.control.resource.v1alpha1.ResourceService/QueryResources"
	// ResourceServiceGetResourceProcedure is the fully-qualified name of the ResourceService's
	// GetResource RPC.
	ResourceServiceGetResourceProcedure = "/commonfate.control.resource.v1alpha1.ResourceService/GetResource"
	// ResourceServiceListChildrenProcedure is the fully-qualified name of the ResourceService's
	// ListChildren RPC.
	ResourceServiceListChildrenProcedure = "/commonfate.control.resource.v1alpha1.ResourceService/ListChildren"
	// ResourceServiceListParentsProcedure is the fully-qualified name of the ResourceService's
	// ListParents RPC.
	ResourceServiceListParentsProcedure = "/commonfate.control.resource.v1alpha1.ResourceService/ListParents"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	resourceServiceServiceDescriptor              = v1alpha1.File_commonfate_control_resource_v1alpha1_resource_proto.Services().ByName("ResourceService")
	resourceServiceListTypesMethodDescriptor      = resourceServiceServiceDescriptor.Methods().ByName("ListTypes")
	resourceServiceQueryResourcesMethodDescriptor = resourceServiceServiceDescriptor.Methods().ByName("QueryResources")
	resourceServiceGetResourceMethodDescriptor    = resourceServiceServiceDescriptor.Methods().ByName("GetResource")
	resourceServiceListChildrenMethodDescriptor   = resourceServiceServiceDescriptor.Methods().ByName("ListChildren")
	resourceServiceListParentsMethodDescriptor    = resourceServiceServiceDescriptor.Methods().ByName("ListParents")
)

// ResourceServiceClient is a client for the commonfate.control.resource.v1alpha1.ResourceService
// service.
type ResourceServiceClient interface {
	// Returns a list of resource types.
	ListTypes(context.Context, *connect.Request[v1alpha1.ListTypesRequest]) (*connect.Response[v1alpha1.ListTypesResponse], error)
	QueryResources(context.Context, *connect.Request[v1alpha1.QueryResourcesRequest]) (*connect.Response[v1alpha1.QueryResourcesResponse], error)
	GetResource(context.Context, *connect.Request[v1alpha1.GetResourceRequest]) (*connect.Response[v1alpha1.GetResourceResponse], error)
	ListChildren(context.Context, *connect.Request[v1alpha1.ListChildrenRequest]) (*connect.Response[v1alpha1.ListChildrenResponse], error)
	ListParents(context.Context, *connect.Request[v1alpha1.ListParentsRequest]) (*connect.Response[v1alpha1.ListParentsResponse], error)
}

// NewResourceServiceClient constructs a client for the
// commonfate.control.resource.v1alpha1.ResourceService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewResourceServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) ResourceServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &resourceServiceClient{
		listTypes: connect.NewClient[v1alpha1.ListTypesRequest, v1alpha1.ListTypesResponse](
			httpClient,
			baseURL+ResourceServiceListTypesProcedure,
			connect.WithSchema(resourceServiceListTypesMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		queryResources: connect.NewClient[v1alpha1.QueryResourcesRequest, v1alpha1.QueryResourcesResponse](
			httpClient,
			baseURL+ResourceServiceQueryResourcesProcedure,
			connect.WithSchema(resourceServiceQueryResourcesMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getResource: connect.NewClient[v1alpha1.GetResourceRequest, v1alpha1.GetResourceResponse](
			httpClient,
			baseURL+ResourceServiceGetResourceProcedure,
			connect.WithSchema(resourceServiceGetResourceMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		listChildren: connect.NewClient[v1alpha1.ListChildrenRequest, v1alpha1.ListChildrenResponse](
			httpClient,
			baseURL+ResourceServiceListChildrenProcedure,
			connect.WithSchema(resourceServiceListChildrenMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		listParents: connect.NewClient[v1alpha1.ListParentsRequest, v1alpha1.ListParentsResponse](
			httpClient,
			baseURL+ResourceServiceListParentsProcedure,
			connect.WithSchema(resourceServiceListParentsMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// resourceServiceClient implements ResourceServiceClient.
type resourceServiceClient struct {
	listTypes      *connect.Client[v1alpha1.ListTypesRequest, v1alpha1.ListTypesResponse]
	queryResources *connect.Client[v1alpha1.QueryResourcesRequest, v1alpha1.QueryResourcesResponse]
	getResource    *connect.Client[v1alpha1.GetResourceRequest, v1alpha1.GetResourceResponse]
	listChildren   *connect.Client[v1alpha1.ListChildrenRequest, v1alpha1.ListChildrenResponse]
	listParents    *connect.Client[v1alpha1.ListParentsRequest, v1alpha1.ListParentsResponse]
}

// ListTypes calls commonfate.control.resource.v1alpha1.ResourceService.ListTypes.
func (c *resourceServiceClient) ListTypes(ctx context.Context, req *connect.Request[v1alpha1.ListTypesRequest]) (*connect.Response[v1alpha1.ListTypesResponse], error) {
	return c.listTypes.CallUnary(ctx, req)
}

// QueryResources calls commonfate.control.resource.v1alpha1.ResourceService.QueryResources.
func (c *resourceServiceClient) QueryResources(ctx context.Context, req *connect.Request[v1alpha1.QueryResourcesRequest]) (*connect.Response[v1alpha1.QueryResourcesResponse], error) {
	return c.queryResources.CallUnary(ctx, req)
}

// GetResource calls commonfate.control.resource.v1alpha1.ResourceService.GetResource.
func (c *resourceServiceClient) GetResource(ctx context.Context, req *connect.Request[v1alpha1.GetResourceRequest]) (*connect.Response[v1alpha1.GetResourceResponse], error) {
	return c.getResource.CallUnary(ctx, req)
}

// ListChildren calls commonfate.control.resource.v1alpha1.ResourceService.ListChildren.
func (c *resourceServiceClient) ListChildren(ctx context.Context, req *connect.Request[v1alpha1.ListChildrenRequest]) (*connect.Response[v1alpha1.ListChildrenResponse], error) {
	return c.listChildren.CallUnary(ctx, req)
}

// ListParents calls commonfate.control.resource.v1alpha1.ResourceService.ListParents.
func (c *resourceServiceClient) ListParents(ctx context.Context, req *connect.Request[v1alpha1.ListParentsRequest]) (*connect.Response[v1alpha1.ListParentsResponse], error) {
	return c.listParents.CallUnary(ctx, req)
}

// ResourceServiceHandler is an implementation of the
// commonfate.control.resource.v1alpha1.ResourceService service.
type ResourceServiceHandler interface {
	// Returns a list of resource types.
	ListTypes(context.Context, *connect.Request[v1alpha1.ListTypesRequest]) (*connect.Response[v1alpha1.ListTypesResponse], error)
	QueryResources(context.Context, *connect.Request[v1alpha1.QueryResourcesRequest]) (*connect.Response[v1alpha1.QueryResourcesResponse], error)
	GetResource(context.Context, *connect.Request[v1alpha1.GetResourceRequest]) (*connect.Response[v1alpha1.GetResourceResponse], error)
	ListChildren(context.Context, *connect.Request[v1alpha1.ListChildrenRequest]) (*connect.Response[v1alpha1.ListChildrenResponse], error)
	ListParents(context.Context, *connect.Request[v1alpha1.ListParentsRequest]) (*connect.Response[v1alpha1.ListParentsResponse], error)
}

// NewResourceServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewResourceServiceHandler(svc ResourceServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	resourceServiceListTypesHandler := connect.NewUnaryHandler(
		ResourceServiceListTypesProcedure,
		svc.ListTypes,
		connect.WithSchema(resourceServiceListTypesMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceQueryResourcesHandler := connect.NewUnaryHandler(
		ResourceServiceQueryResourcesProcedure,
		svc.QueryResources,
		connect.WithSchema(resourceServiceQueryResourcesMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceGetResourceHandler := connect.NewUnaryHandler(
		ResourceServiceGetResourceProcedure,
		svc.GetResource,
		connect.WithSchema(resourceServiceGetResourceMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceListChildrenHandler := connect.NewUnaryHandler(
		ResourceServiceListChildrenProcedure,
		svc.ListChildren,
		connect.WithSchema(resourceServiceListChildrenMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	resourceServiceListParentsHandler := connect.NewUnaryHandler(
		ResourceServiceListParentsProcedure,
		svc.ListParents,
		connect.WithSchema(resourceServiceListParentsMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/commonfate.control.resource.v1alpha1.ResourceService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ResourceServiceListTypesProcedure:
			resourceServiceListTypesHandler.ServeHTTP(w, r)
		case ResourceServiceQueryResourcesProcedure:
			resourceServiceQueryResourcesHandler.ServeHTTP(w, r)
		case ResourceServiceGetResourceProcedure:
			resourceServiceGetResourceHandler.ServeHTTP(w, r)
		case ResourceServiceListChildrenProcedure:
			resourceServiceListChildrenHandler.ServeHTTP(w, r)
		case ResourceServiceListParentsProcedure:
			resourceServiceListParentsHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedResourceServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedResourceServiceHandler struct{}

func (UnimplementedResourceServiceHandler) ListTypes(context.Context, *connect.Request[v1alpha1.ListTypesRequest]) (*connect.Response[v1alpha1.ListTypesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("commonfate.control.resource.v1alpha1.ResourceService.ListTypes is not implemented"))
}

func (UnimplementedResourceServiceHandler) QueryResources(context.Context, *connect.Request[v1alpha1.QueryResourcesRequest]) (*connect.Response[v1alpha1.QueryResourcesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("commonfate.control.resource.v1alpha1.ResourceService.QueryResources is not implemented"))
}

func (UnimplementedResourceServiceHandler) GetResource(context.Context, *connect.Request[v1alpha1.GetResourceRequest]) (*connect.Response[v1alpha1.GetResourceResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("commonfate.control.resource.v1alpha1.ResourceService.GetResource is not implemented"))
}

func (UnimplementedResourceServiceHandler) ListChildren(context.Context, *connect.Request[v1alpha1.ListChildrenRequest]) (*connect.Response[v1alpha1.ListChildrenResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("commonfate.control.resource.v1alpha1.ResourceService.ListChildren is not implemented"))
}

func (UnimplementedResourceServiceHandler) ListParents(context.Context, *connect.Request[v1alpha1.ListParentsRequest]) (*connect.Response[v1alpha1.ListParentsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("commonfate.control.resource.v1alpha1.ResourceService.ListParents is not implemented"))
}
