// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: commonfate/control/integration/v1alpha1/proxy.proto

package integrationv1alpha1

import (
	_ "github.com/common-fate/sdk/gen/commonfate/authz/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string      `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Resources     []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	// Types that are assignable to InstanceConfig:
	//
	//	*CreateProxyRequest_AwsEcsProxyInstanceConfig
	InstanceConfig isCreateProxyRequest_InstanceConfig `protobuf_oneof:"instance_config"`
	Id             string                              `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateProxyRequest) Reset() {
	*x = CreateProxyRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyRequest) ProtoMessage() {}

func (x *CreateProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyRequest.ProtoReflect.Descriptor instead.
func (*CreateProxyRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProxyRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *CreateProxyRequest) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (m *CreateProxyRequest) GetInstanceConfig() isCreateProxyRequest_InstanceConfig {
	if m != nil {
		return m.InstanceConfig
	}
	return nil
}

func (x *CreateProxyRequest) GetAwsEcsProxyInstanceConfig() *AWSECSProxyInstanceConfig {
	if x, ok := x.GetInstanceConfig().(*CreateProxyRequest_AwsEcsProxyInstanceConfig); ok {
		return x.AwsEcsProxyInstanceConfig
	}
	return nil
}

func (x *CreateProxyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type isCreateProxyRequest_InstanceConfig interface {
	isCreateProxyRequest_InstanceConfig()
}

type CreateProxyRequest_AwsEcsProxyInstanceConfig struct {
	AwsEcsProxyInstanceConfig *AWSECSProxyInstanceConfig `protobuf:"bytes,3,opt,name=aws_ecs_proxy_instance_config,json=awsEcsProxyInstanceConfig,proto3,oneof"`
}

func (*CreateProxyRequest_AwsEcsProxyInstanceConfig) isCreateProxyRequest_InstanceConfig() {}

type CreateProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	// Types that are assignable to InstanceConfig:
	//
	//	*CreateProxyResponse_AwsEcsProxyInstanceConfig
	InstanceConfig isCreateProxyResponse_InstanceConfig `protobuf_oneof:"instance_config"`
}

func (x *CreateProxyResponse) Reset() {
	*x = CreateProxyResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyResponse) ProtoMessage() {}

func (x *CreateProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyResponse.ProtoReflect.Descriptor instead.
func (*CreateProxyResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProxyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProxyResponse) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (m *CreateProxyResponse) GetInstanceConfig() isCreateProxyResponse_InstanceConfig {
	if m != nil {
		return m.InstanceConfig
	}
	return nil
}

func (x *CreateProxyResponse) GetAwsEcsProxyInstanceConfig() *AWSECSProxyInstanceConfig {
	if x, ok := x.GetInstanceConfig().(*CreateProxyResponse_AwsEcsProxyInstanceConfig); ok {
		return x.AwsEcsProxyInstanceConfig
	}
	return nil
}

type isCreateProxyResponse_InstanceConfig interface {
	isCreateProxyResponse_InstanceConfig()
}

type CreateProxyResponse_AwsEcsProxyInstanceConfig struct {
	AwsEcsProxyInstanceConfig *AWSECSProxyInstanceConfig `protobuf:"bytes,3,opt,name=aws_ecs_proxy_instance_config,json=awsEcsProxyInstanceConfig,proto3,oneof"`
}

func (*CreateProxyResponse_AwsEcsProxyInstanceConfig) isCreateProxyResponse_InstanceConfig() {}

type GetProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProxyRequest) Reset() {
	*x = GetProxyRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyRequest) ProtoMessage() {}

func (x *GetProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyRequest.ProtoReflect.Descriptor instead.
func (*GetProxyRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *GetProxyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to InstanceConfig:
	//
	//	*GetProxyResponse_AwsEcsProxyInstanceConfig
	InstanceConfig isGetProxyResponse_InstanceConfig `protobuf_oneof:"instance_config"`
}

func (x *GetProxyResponse) Reset() {
	*x = GetProxyResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyResponse) ProtoMessage() {}

func (x *GetProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyResponse.ProtoReflect.Descriptor instead.
func (*GetProxyResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *GetProxyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *GetProxyResponse) GetInstanceConfig() isGetProxyResponse_InstanceConfig {
	if m != nil {
		return m.InstanceConfig
	}
	return nil
}

func (x *GetProxyResponse) GetAwsEcsProxyInstanceConfig() *AWSECSProxyInstanceConfig {
	if x, ok := x.GetInstanceConfig().(*GetProxyResponse_AwsEcsProxyInstanceConfig); ok {
		return x.AwsEcsProxyInstanceConfig
	}
	return nil
}

type isGetProxyResponse_InstanceConfig interface {
	isGetProxyResponse_InstanceConfig()
}

type GetProxyResponse_AwsEcsProxyInstanceConfig struct {
	AwsEcsProxyInstanceConfig *AWSECSProxyInstanceConfig `protobuf:"bytes,4,opt,name=aws_ecs_proxy_instance_config,json=awsEcsProxyInstanceConfig,proto3,oneof"`
}

func (*GetProxyResponse_AwsEcsProxyInstanceConfig) isGetProxyResponse_InstanceConfig() {}

type UpdateProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to InstanceConfig:
	//
	//	*UpdateProxyRequest_AwsEcsProxyInstanceConfig
	InstanceConfig isUpdateProxyRequest_InstanceConfig `protobuf_oneof:"instance_config"`
}

func (x *UpdateProxyRequest) Reset() {
	*x = UpdateProxyRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyRequest) ProtoMessage() {}

func (x *UpdateProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyRequest.ProtoReflect.Descriptor instead.
func (*UpdateProxyRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProxyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *UpdateProxyRequest) GetInstanceConfig() isUpdateProxyRequest_InstanceConfig {
	if m != nil {
		return m.InstanceConfig
	}
	return nil
}

func (x *UpdateProxyRequest) GetAwsEcsProxyInstanceConfig() *AWSECSProxyInstanceConfig {
	if x, ok := x.GetInstanceConfig().(*UpdateProxyRequest_AwsEcsProxyInstanceConfig); ok {
		return x.AwsEcsProxyInstanceConfig
	}
	return nil
}

type isUpdateProxyRequest_InstanceConfig interface {
	isUpdateProxyRequest_InstanceConfig()
}

type UpdateProxyRequest_AwsEcsProxyInstanceConfig struct {
	AwsEcsProxyInstanceConfig *AWSECSProxyInstanceConfig `protobuf:"bytes,4,opt,name=aws_ecs_proxy_instance_config,json=awsEcsProxyInstanceConfig,proto3,oneof"`
}

func (*UpdateProxyRequest_AwsEcsProxyInstanceConfig) isUpdateProxyRequest_InstanceConfig() {}

type UpdateProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to InstanceConfig:
	//
	//	*UpdateProxyResponse_AwsEcsProxyInstanceConfig
	InstanceConfig isUpdateProxyResponse_InstanceConfig `protobuf_oneof:"instance_config"`
}

func (x *UpdateProxyResponse) Reset() {
	*x = UpdateProxyResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyResponse) ProtoMessage() {}

func (x *UpdateProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyResponse.ProtoReflect.Descriptor instead.
func (*UpdateProxyResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateProxyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *UpdateProxyResponse) GetInstanceConfig() isUpdateProxyResponse_InstanceConfig {
	if m != nil {
		return m.InstanceConfig
	}
	return nil
}

func (x *UpdateProxyResponse) GetAwsEcsProxyInstanceConfig() *AWSECSProxyInstanceConfig {
	if x, ok := x.GetInstanceConfig().(*UpdateProxyResponse_AwsEcsProxyInstanceConfig); ok {
		return x.AwsEcsProxyInstanceConfig
	}
	return nil
}

type isUpdateProxyResponse_InstanceConfig interface {
	isUpdateProxyResponse_InstanceConfig()
}

type UpdateProxyResponse_AwsEcsProxyInstanceConfig struct {
	AwsEcsProxyInstanceConfig *AWSECSProxyInstanceConfig `protobuf:"bytes,4,opt,name=aws_ecs_proxy_instance_config,json=awsEcsProxyInstanceConfig,proto3,oneof"`
}

func (*UpdateProxyResponse_AwsEcsProxyInstanceConfig) isUpdateProxyResponse_InstanceConfig() {}

type DeleteProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyRequest) Reset() {
	*x = DeleteProxyRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyRequest) ProtoMessage() {}

func (x *DeleteProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyRequest.ProtoReflect.Descriptor instead.
func (*DeleteProxyRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProxyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyResponse) Reset() {
	*x = DeleteProxyResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyResponse) ProtoMessage() {}

func (x *DeleteProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyResponse.ProtoReflect.Descriptor instead.
func (*DeleteProxyResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteProxyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListProxyResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId string `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
}

func (x *ListProxyResourcesRequest) Reset() {
	*x = ListProxyResourcesRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProxyResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProxyResourcesRequest) ProtoMessage() {}

func (x *ListProxyResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProxyResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListProxyResourcesRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *ListProxyResourcesRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

type ListProxyResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId   string      `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	Resources []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ListProxyResourcesResponse) Reset() {
	*x = ListProxyResourcesResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProxyResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProxyResourcesResponse) ProtoMessage() {}

func (x *ListProxyResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProxyResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListProxyResourcesResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *ListProxyResourcesResponse) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *ListProxyResourcesResponse) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type CreateProxyRdsResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId     string          `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	RdsDatabase *AWSRDSDatabase `protobuf:"bytes,2,opt,name=rds_database,json=rdsDatabase,proto3" json:"rds_database,omitempty"`
}

func (x *CreateProxyRdsResourceRequest) Reset() {
	*x = CreateProxyRdsResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyRdsResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyRdsResourceRequest) ProtoMessage() {}

func (x *CreateProxyRdsResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyRdsResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateProxyRdsResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *CreateProxyRdsResourceRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *CreateProxyRdsResourceRequest) GetRdsDatabase() *AWSRDSDatabase {
	if x != nil {
		return x.RdsDatabase
	}
	return nil
}

type CreateProxyRdsResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId     string          `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	RdsDatabase *AWSRDSDatabase `protobuf:"bytes,3,opt,name=rds_database,json=rdsDatabase,proto3" json:"rds_database,omitempty"`
}

func (x *CreateProxyRdsResourceResponse) Reset() {
	*x = CreateProxyRdsResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyRdsResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyRdsResourceResponse) ProtoMessage() {}

func (x *CreateProxyRdsResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyRdsResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateProxyRdsResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *CreateProxyRdsResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProxyRdsResourceResponse) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *CreateProxyRdsResourceResponse) GetRdsDatabase() *AWSRDSDatabase {
	if x != nil {
		return x.RdsDatabase
	}
	return nil
}

type GetProxyRdsResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProxyRdsResourceRequest) Reset() {
	*x = GetProxyRdsResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyRdsResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyRdsResourceRequest) ProtoMessage() {}

func (x *GetProxyRdsResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyRdsResourceRequest.ProtoReflect.Descriptor instead.
func (*GetProxyRdsResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{12}
}

func (x *GetProxyRdsResourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProxyRdsResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RdsDatabase *AWSRDSDatabase `protobuf:"bytes,2,opt,name=rds_database,json=rdsDatabase,proto3" json:"rds_database,omitempty"`
}

func (x *GetProxyRdsResourceResponse) Reset() {
	*x = GetProxyRdsResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyRdsResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyRdsResourceResponse) ProtoMessage() {}

func (x *GetProxyRdsResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyRdsResourceResponse.ProtoReflect.Descriptor instead.
func (*GetProxyRdsResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{13}
}

func (x *GetProxyRdsResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetProxyRdsResourceResponse) GetRdsDatabase() *AWSRDSDatabase {
	if x != nil {
		return x.RdsDatabase
	}
	return nil
}

type UpdateProxyRdsResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId     string          `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	RdsDatabase *AWSRDSDatabase `protobuf:"bytes,3,opt,name=rds_database,json=rdsDatabase,proto3" json:"rds_database,omitempty"`
}

func (x *UpdateProxyRdsResourceRequest) Reset() {
	*x = UpdateProxyRdsResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyRdsResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyRdsResourceRequest) ProtoMessage() {}

func (x *UpdateProxyRdsResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyRdsResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateProxyRdsResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateProxyRdsResourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProxyRdsResourceRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *UpdateProxyRdsResourceRequest) GetRdsDatabase() *AWSRDSDatabase {
	if x != nil {
		return x.RdsDatabase
	}
	return nil
}

type UpdateProxyRdsResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId     string          `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	RdsDatabase *AWSRDSDatabase `protobuf:"bytes,3,opt,name=rds_database,json=rdsDatabase,proto3" json:"rds_database,omitempty"`
}

func (x *UpdateProxyRdsResourceResponse) Reset() {
	*x = UpdateProxyRdsResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyRdsResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyRdsResourceResponse) ProtoMessage() {}

func (x *UpdateProxyRdsResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyRdsResourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateProxyRdsResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateProxyRdsResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProxyRdsResourceResponse) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *UpdateProxyRdsResourceResponse) GetRdsDatabase() *AWSRDSDatabase {
	if x != nil {
		return x.RdsDatabase
	}
	return nil
}

type DeleteProxyRdsResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyRdsResourceRequest) Reset() {
	*x = DeleteProxyRdsResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyRdsResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyRdsResourceRequest) ProtoMessage() {}

func (x *DeleteProxyRdsResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyRdsResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteProxyRdsResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteProxyRdsResourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProxyRdsResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyRdsResourceResponse) Reset() {
	*x = DeleteProxyRdsResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyRdsResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyRdsResourceResponse) ProtoMessage() {}

func (x *DeleteProxyRdsResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyRdsResourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteProxyRdsResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteProxyRdsResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateProxyEksClusterResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId    string         `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	EksCluster *AWSEKSCluster `protobuf:"bytes,2,opt,name=eks_cluster,json=eksCluster,proto3" json:"eks_cluster,omitempty"`
}

func (x *CreateProxyEksClusterResourceRequest) Reset() {
	*x = CreateProxyEksClusterResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyEksClusterResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyEksClusterResourceRequest) ProtoMessage() {}

func (x *CreateProxyEksClusterResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyEksClusterResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateProxyEksClusterResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{18}
}

func (x *CreateProxyEksClusterResourceRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *CreateProxyEksClusterResourceRequest) GetEksCluster() *AWSEKSCluster {
	if x != nil {
		return x.EksCluster
	}
	return nil
}

type CreateProxyEksClusterResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId    string         `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	EksCluster *AWSEKSCluster `protobuf:"bytes,3,opt,name=eks_cluster,json=eksCluster,proto3" json:"eks_cluster,omitempty"`
}

func (x *CreateProxyEksClusterResourceResponse) Reset() {
	*x = CreateProxyEksClusterResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyEksClusterResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyEksClusterResourceResponse) ProtoMessage() {}

func (x *CreateProxyEksClusterResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyEksClusterResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateProxyEksClusterResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{19}
}

func (x *CreateProxyEksClusterResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProxyEksClusterResourceResponse) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *CreateProxyEksClusterResourceResponse) GetEksCluster() *AWSEKSCluster {
	if x != nil {
		return x.EksCluster
	}
	return nil
}

type GetProxyEksClusterResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProxyEksClusterResourceRequest) Reset() {
	*x = GetProxyEksClusterResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyEksClusterResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyEksClusterResourceRequest) ProtoMessage() {}

func (x *GetProxyEksClusterResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyEksClusterResourceRequest.ProtoReflect.Descriptor instead.
func (*GetProxyEksClusterResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{20}
}

func (x *GetProxyEksClusterResourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProxyEksClusterResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EksCluster *AWSEKSCluster `protobuf:"bytes,2,opt,name=eks_cluster,json=eksCluster,proto3" json:"eks_cluster,omitempty"`
}

func (x *GetProxyEksClusterResourceResponse) Reset() {
	*x = GetProxyEksClusterResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyEksClusterResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyEksClusterResourceResponse) ProtoMessage() {}

func (x *GetProxyEksClusterResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyEksClusterResourceResponse.ProtoReflect.Descriptor instead.
func (*GetProxyEksClusterResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{21}
}

func (x *GetProxyEksClusterResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetProxyEksClusterResourceResponse) GetEksCluster() *AWSEKSCluster {
	if x != nil {
		return x.EksCluster
	}
	return nil
}

type UpdateProxyEksClusterResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId    string         `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	EksCluster *AWSEKSCluster `protobuf:"bytes,3,opt,name=eks_cluster,json=eksCluster,proto3" json:"eks_cluster,omitempty"`
}

func (x *UpdateProxyEksClusterResourceRequest) Reset() {
	*x = UpdateProxyEksClusterResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyEksClusterResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyEksClusterResourceRequest) ProtoMessage() {}

func (x *UpdateProxyEksClusterResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyEksClusterResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateProxyEksClusterResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateProxyEksClusterResourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProxyEksClusterResourceRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *UpdateProxyEksClusterResourceRequest) GetEksCluster() *AWSEKSCluster {
	if x != nil {
		return x.EksCluster
	}
	return nil
}

type UpdateProxyEksClusterResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId    string         `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	EksCluster *AWSEKSCluster `protobuf:"bytes,3,opt,name=eks_cluster,json=eksCluster,proto3" json:"eks_cluster,omitempty"`
}

func (x *UpdateProxyEksClusterResourceResponse) Reset() {
	*x = UpdateProxyEksClusterResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyEksClusterResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyEksClusterResourceResponse) ProtoMessage() {}

func (x *UpdateProxyEksClusterResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyEksClusterResourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateProxyEksClusterResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateProxyEksClusterResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProxyEksClusterResourceResponse) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *UpdateProxyEksClusterResourceResponse) GetEksCluster() *AWSEKSCluster {
	if x != nil {
		return x.EksCluster
	}
	return nil
}

type DeleteProxyEksClusterResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyEksClusterResourceRequest) Reset() {
	*x = DeleteProxyEksClusterResourceRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyEksClusterResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyEksClusterResourceRequest) ProtoMessage() {}

func (x *DeleteProxyEksClusterResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyEksClusterResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteProxyEksClusterResourceRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteProxyEksClusterResourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProxyEksClusterResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyEksClusterResourceResponse) Reset() {
	*x = DeleteProxyEksClusterResourceResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyEksClusterResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyEksClusterResourceResponse) ProtoMessage() {}

func (x *DeleteProxyEksClusterResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyEksClusterResourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteProxyEksClusterResourceResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteProxyEksClusterResourceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateProxyEksServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId        string                `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	ServiceAccount *AWSEKSServiceAccount `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *CreateProxyEksServiceAccountRequest) Reset() {
	*x = CreateProxyEksServiceAccountRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyEksServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyEksServiceAccountRequest) ProtoMessage() {}

func (x *CreateProxyEksServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyEksServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateProxyEksServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{26}
}

func (x *CreateProxyEksServiceAccountRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *CreateProxyEksServiceAccountRequest) GetServiceAccount() *AWSEKSServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type CreateProxyEksServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId        string                `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	ServiceAccount *AWSEKSServiceAccount `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *CreateProxyEksServiceAccountResponse) Reset() {
	*x = CreateProxyEksServiceAccountResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProxyEksServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyEksServiceAccountResponse) ProtoMessage() {}

func (x *CreateProxyEksServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyEksServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateProxyEksServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{27}
}

func (x *CreateProxyEksServiceAccountResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateProxyEksServiceAccountResponse) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *CreateProxyEksServiceAccountResponse) GetServiceAccount() *AWSEKSServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type GetProxyEksServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProxyEksServiceAccountRequest) Reset() {
	*x = GetProxyEksServiceAccountRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyEksServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyEksServiceAccountRequest) ProtoMessage() {}

func (x *GetProxyEksServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyEksServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*GetProxyEksServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{28}
}

func (x *GetProxyEksServiceAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProxyEksServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceAccount *AWSEKSServiceAccount `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *GetProxyEksServiceAccountResponse) Reset() {
	*x = GetProxyEksServiceAccountResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProxyEksServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyEksServiceAccountResponse) ProtoMessage() {}

func (x *GetProxyEksServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyEksServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*GetProxyEksServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{29}
}

func (x *GetProxyEksServiceAccountResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetProxyEksServiceAccountResponse) GetServiceAccount() *AWSEKSServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type UpdateProxyEksServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId        string                `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	ServiceAccount *AWSEKSServiceAccount `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *UpdateProxyEksServiceAccountRequest) Reset() {
	*x = UpdateProxyEksServiceAccountRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyEksServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyEksServiceAccountRequest) ProtoMessage() {}

func (x *UpdateProxyEksServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyEksServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateProxyEksServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateProxyEksServiceAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProxyEksServiceAccountRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *UpdateProxyEksServiceAccountRequest) GetServiceAccount() *AWSEKSServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type UpdateProxyEksServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProxyId        string                `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	ServiceAccount *AWSEKSServiceAccount `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *UpdateProxyEksServiceAccountResponse) Reset() {
	*x = UpdateProxyEksServiceAccountResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProxyEksServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyEksServiceAccountResponse) ProtoMessage() {}

func (x *UpdateProxyEksServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyEksServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateProxyEksServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateProxyEksServiceAccountResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProxyEksServiceAccountResponse) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *UpdateProxyEksServiceAccountResponse) GetServiceAccount() *AWSEKSServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type DeleteProxyEksServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyEksServiceAccountRequest) Reset() {
	*x = DeleteProxyEksServiceAccountRequest{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyEksServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyEksServiceAccountRequest) ProtoMessage() {}

func (x *DeleteProxyEksServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyEksServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteProxyEksServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteProxyEksServiceAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProxyEksServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyEksServiceAccountResponse) Reset() {
	*x = DeleteProxyEksServiceAccountResponse{}
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProxyEksServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyEksServiceAccountResponse) ProtoMessage() {}

func (x *DeleteProxyEksServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyEksServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteProxyEksServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteProxyEksServiceAccountResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_commonfate_control_integration_v1alpha1_proxy_proto protoreflect.FileDescriptor

var file_commonfate_control_integration_v1alpha1_proxy_proto_rawDesc = []byte{
	0x0a, 0x33, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x29,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb8, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x86, 0x01, 0x0a, 0x1d, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x19, 0x61,
	0x77, 0x73, 0x45, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xe8, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x86, 0x01, 0x0a, 0x1d, 0x61,
	0x77, 0x73, 0x5f, 0x65, 0x63, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53,
	0x45, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x19, 0x61, 0x77, 0x73, 0x45, 0x63, 0x73,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x11, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x86,
	0x01, 0x0a, 0x1d, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66,
	0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x57, 0x53, 0x45, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x19, 0x61, 0x77,
	0x73, 0x45, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x86, 0x01, 0x0a, 0x1d, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52,
	0x19, 0x61, 0x77, 0x73, 0x45, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11, 0x0a, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc1, 0x01,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x86, 0x01, 0x0a, 0x1d, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x43, 0x53, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x19, 0x61, 0x77, 0x73, 0x45, 0x63, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11,
	0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64,
	0x12, 0x4f, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x5a,
	0x0a, 0x0c, 0x72, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x72,
	0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x1e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x0c, 0x72, 0x64, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x5a, 0x0a, 0x0c, 0x72, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x0b, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0xa6,
	0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x0c, 0x72,
	0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x52,
	0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x72, 0x64, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x0c, 0x72, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0b, 0x65, 0x6b, 0x73, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x22, 0xab, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0b, 0x65, 0x6b, 0x73, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x33, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x57, 0x0a, 0x0b, 0x65,
	0x6b, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b,
	0x53, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6b, 0x73, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x22, 0xaa, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0b, 0x65, 0x6b, 0x73, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x22, 0xab, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0b, 0x65, 0x6b, 0x73, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x36, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xa8, 0x01, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x24,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12,
	0x66, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x66, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x23, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x57, 0x53, 0x45, 0x4b, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x45,
	0x4b, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x35, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45,
	0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32,
	0x98, 0x17, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xab, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x46, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xab,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xab, 0x01, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x88,
	0xb5, 0x18, 0x01, 0x12, 0xc0, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc0, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc0, 0x01, 0x0a, 0x1d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xbb, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x88, 0xb5, 0x18, 0x01, 0x12, 0xbd, 0x01, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45,
	0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xbd, 0x01, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45,
	0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xbd, 0x01, 0x0a, 0x1c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45,
	0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb8, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x04, 0x88, 0xb5, 0x18, 0x01, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8a, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12,
	0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04,
	0x88, 0xb5, 0x18, 0x01, 0x12, 0xa3, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x42, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0x88, 0xb5, 0x18, 0x01, 0x42, 0xd4, 0x02, 0x0a, 0x2b, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0a, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x66, 0x61, 0x74, 0x65,
	0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66,
	0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x3b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x43, 0x49, 0xaa, 0x02, 0x27, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x27, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74,
	0x65, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02,
	0x33, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x5c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x2a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74,
	0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x3a, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescOnce sync.Once
	file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescData = file_commonfate_control_integration_v1alpha1_proxy_proto_rawDesc
)

func file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescGZIP() []byte {
	file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescOnce.Do(func() {
		file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescData)
	})
	return file_commonfate_control_integration_v1alpha1_proxy_proto_rawDescData
}

var file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_commonfate_control_integration_v1alpha1_proxy_proto_goTypes = []any{
	(*CreateProxyRequest)(nil),                    // 0: commonfate.control.integration.v1alpha1.CreateProxyRequest
	(*CreateProxyResponse)(nil),                   // 1: commonfate.control.integration.v1alpha1.CreateProxyResponse
	(*GetProxyRequest)(nil),                       // 2: commonfate.control.integration.v1alpha1.GetProxyRequest
	(*GetProxyResponse)(nil),                      // 3: commonfate.control.integration.v1alpha1.GetProxyResponse
	(*UpdateProxyRequest)(nil),                    // 4: commonfate.control.integration.v1alpha1.UpdateProxyRequest
	(*UpdateProxyResponse)(nil),                   // 5: commonfate.control.integration.v1alpha1.UpdateProxyResponse
	(*DeleteProxyRequest)(nil),                    // 6: commonfate.control.integration.v1alpha1.DeleteProxyRequest
	(*DeleteProxyResponse)(nil),                   // 7: commonfate.control.integration.v1alpha1.DeleteProxyResponse
	(*ListProxyResourcesRequest)(nil),             // 8: commonfate.control.integration.v1alpha1.ListProxyResourcesRequest
	(*ListProxyResourcesResponse)(nil),            // 9: commonfate.control.integration.v1alpha1.ListProxyResourcesResponse
	(*CreateProxyRdsResourceRequest)(nil),         // 10: commonfate.control.integration.v1alpha1.CreateProxyRdsResourceRequest
	(*CreateProxyRdsResourceResponse)(nil),        // 11: commonfate.control.integration.v1alpha1.CreateProxyRdsResourceResponse
	(*GetProxyRdsResourceRequest)(nil),            // 12: commonfate.control.integration.v1alpha1.GetProxyRdsResourceRequest
	(*GetProxyRdsResourceResponse)(nil),           // 13: commonfate.control.integration.v1alpha1.GetProxyRdsResourceResponse
	(*UpdateProxyRdsResourceRequest)(nil),         // 14: commonfate.control.integration.v1alpha1.UpdateProxyRdsResourceRequest
	(*UpdateProxyRdsResourceResponse)(nil),        // 15: commonfate.control.integration.v1alpha1.UpdateProxyRdsResourceResponse
	(*DeleteProxyRdsResourceRequest)(nil),         // 16: commonfate.control.integration.v1alpha1.DeleteProxyRdsResourceRequest
	(*DeleteProxyRdsResourceResponse)(nil),        // 17: commonfate.control.integration.v1alpha1.DeleteProxyRdsResourceResponse
	(*CreateProxyEksClusterResourceRequest)(nil),  // 18: commonfate.control.integration.v1alpha1.CreateProxyEksClusterResourceRequest
	(*CreateProxyEksClusterResourceResponse)(nil), // 19: commonfate.control.integration.v1alpha1.CreateProxyEksClusterResourceResponse
	(*GetProxyEksClusterResourceRequest)(nil),     // 20: commonfate.control.integration.v1alpha1.GetProxyEksClusterResourceRequest
	(*GetProxyEksClusterResourceResponse)(nil),    // 21: commonfate.control.integration.v1alpha1.GetProxyEksClusterResourceResponse
	(*UpdateProxyEksClusterResourceRequest)(nil),  // 22: commonfate.control.integration.v1alpha1.UpdateProxyEksClusterResourceRequest
	(*UpdateProxyEksClusterResourceResponse)(nil), // 23: commonfate.control.integration.v1alpha1.UpdateProxyEksClusterResourceResponse
	(*DeleteProxyEksClusterResourceRequest)(nil),  // 24: commonfate.control.integration.v1alpha1.DeleteProxyEksClusterResourceRequest
	(*DeleteProxyEksClusterResourceResponse)(nil), // 25: commonfate.control.integration.v1alpha1.DeleteProxyEksClusterResourceResponse
	(*CreateProxyEksServiceAccountRequest)(nil),   // 26: commonfate.control.integration.v1alpha1.CreateProxyEksServiceAccountRequest
	(*CreateProxyEksServiceAccountResponse)(nil),  // 27: commonfate.control.integration.v1alpha1.CreateProxyEksServiceAccountResponse
	(*GetProxyEksServiceAccountRequest)(nil),      // 28: commonfate.control.integration.v1alpha1.GetProxyEksServiceAccountRequest
	(*GetProxyEksServiceAccountResponse)(nil),     // 29: commonfate.control.integration.v1alpha1.GetProxyEksServiceAccountResponse
	(*UpdateProxyEksServiceAccountRequest)(nil),   // 30: commonfate.control.integration.v1alpha1.UpdateProxyEksServiceAccountRequest
	(*UpdateProxyEksServiceAccountResponse)(nil),  // 31: commonfate.control.integration.v1alpha1.UpdateProxyEksServiceAccountResponse
	(*DeleteProxyEksServiceAccountRequest)(nil),   // 32: commonfate.control.integration.v1alpha1.DeleteProxyEksServiceAccountRequest
	(*DeleteProxyEksServiceAccountResponse)(nil),  // 33: commonfate.control.integration.v1alpha1.DeleteProxyEksServiceAccountResponse
	(*Resource)(nil),                              // 34: commonfate.control.integration.v1alpha1.Resource
	(*AWSECSProxyInstanceConfig)(nil),             // 35: commonfate.control.integration.v1alpha1.AWSECSProxyInstanceConfig
	(*AWSRDSDatabase)(nil),                        // 36: commonfate.control.integration.v1alpha1.AWSRDSDatabase
	(*AWSEKSCluster)(nil),                         // 37: commonfate.control.integration.v1alpha1.AWSEKSCluster
	(*AWSEKSServiceAccount)(nil),                  // 38: commonfate.control.integration.v1alpha1.AWSEKSServiceAccount
}
var file_commonfate_control_integration_v1alpha1_proxy_proto_depIdxs = []int32{
	34, // 0: commonfate.control.integration.v1alpha1.CreateProxyRequest.resources:type_name -> commonfate.control.integration.v1alpha1.Resource
	35, // 1: commonfate.control.integration.v1alpha1.CreateProxyRequest.aws_ecs_proxy_instance_config:type_name -> commonfate.control.integration.v1alpha1.AWSECSProxyInstanceConfig
	35, // 2: commonfate.control.integration.v1alpha1.CreateProxyResponse.aws_ecs_proxy_instance_config:type_name -> commonfate.control.integration.v1alpha1.AWSECSProxyInstanceConfig
	35, // 3: commonfate.control.integration.v1alpha1.GetProxyResponse.aws_ecs_proxy_instance_config:type_name -> commonfate.control.integration.v1alpha1.AWSECSProxyInstanceConfig
	35, // 4: commonfate.control.integration.v1alpha1.UpdateProxyRequest.aws_ecs_proxy_instance_config:type_name -> commonfate.control.integration.v1alpha1.AWSECSProxyInstanceConfig
	35, // 5: commonfate.control.integration.v1alpha1.UpdateProxyResponse.aws_ecs_proxy_instance_config:type_name -> commonfate.control.integration.v1alpha1.AWSECSProxyInstanceConfig
	34, // 6: commonfate.control.integration.v1alpha1.ListProxyResourcesResponse.resources:type_name -> commonfate.control.integration.v1alpha1.Resource
	36, // 7: commonfate.control.integration.v1alpha1.CreateProxyRdsResourceRequest.rds_database:type_name -> commonfate.control.integration.v1alpha1.AWSRDSDatabase
	36, // 8: commonfate.control.integration.v1alpha1.CreateProxyRdsResourceResponse.rds_database:type_name -> commonfate.control.integration.v1alpha1.AWSRDSDatabase
	36, // 9: commonfate.control.integration.v1alpha1.GetProxyRdsResourceResponse.rds_database:type_name -> commonfate.control.integration.v1alpha1.AWSRDSDatabase
	36, // 10: commonfate.control.integration.v1alpha1.UpdateProxyRdsResourceRequest.rds_database:type_name -> commonfate.control.integration.v1alpha1.AWSRDSDatabase
	36, // 11: commonfate.control.integration.v1alpha1.UpdateProxyRdsResourceResponse.rds_database:type_name -> commonfate.control.integration.v1alpha1.AWSRDSDatabase
	37, // 12: commonfate.control.integration.v1alpha1.CreateProxyEksClusterResourceRequest.eks_cluster:type_name -> commonfate.control.integration.v1alpha1.AWSEKSCluster
	37, // 13: commonfate.control.integration.v1alpha1.CreateProxyEksClusterResourceResponse.eks_cluster:type_name -> commonfate.control.integration.v1alpha1.AWSEKSCluster
	37, // 14: commonfate.control.integration.v1alpha1.GetProxyEksClusterResourceResponse.eks_cluster:type_name -> commonfate.control.integration.v1alpha1.AWSEKSCluster
	37, // 15: commonfate.control.integration.v1alpha1.UpdateProxyEksClusterResourceRequest.eks_cluster:type_name -> commonfate.control.integration.v1alpha1.AWSEKSCluster
	37, // 16: commonfate.control.integration.v1alpha1.UpdateProxyEksClusterResourceResponse.eks_cluster:type_name -> commonfate.control.integration.v1alpha1.AWSEKSCluster
	38, // 17: commonfate.control.integration.v1alpha1.CreateProxyEksServiceAccountRequest.service_account:type_name -> commonfate.control.integration.v1alpha1.AWSEKSServiceAccount
	38, // 18: commonfate.control.integration.v1alpha1.CreateProxyEksServiceAccountResponse.service_account:type_name -> commonfate.control.integration.v1alpha1.AWSEKSServiceAccount
	38, // 19: commonfate.control.integration.v1alpha1.GetProxyEksServiceAccountResponse.service_account:type_name -> commonfate.control.integration.v1alpha1.AWSEKSServiceAccount
	38, // 20: commonfate.control.integration.v1alpha1.UpdateProxyEksServiceAccountRequest.service_account:type_name -> commonfate.control.integration.v1alpha1.AWSEKSServiceAccount
	38, // 21: commonfate.control.integration.v1alpha1.UpdateProxyEksServiceAccountResponse.service_account:type_name -> commonfate.control.integration.v1alpha1.AWSEKSServiceAccount
	10, // 22: commonfate.control.integration.v1alpha1.ProxyService.CreateProxyRdsResource:input_type -> commonfate.control.integration.v1alpha1.CreateProxyRdsResourceRequest
	14, // 23: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxyRdsResource:input_type -> commonfate.control.integration.v1alpha1.UpdateProxyRdsResourceRequest
	16, // 24: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxyRdsResource:input_type -> commonfate.control.integration.v1alpha1.DeleteProxyRdsResourceRequest
	12, // 25: commonfate.control.integration.v1alpha1.ProxyService.GetProxyRdsResource:input_type -> commonfate.control.integration.v1alpha1.GetProxyRdsResourceRequest
	18, // 26: commonfate.control.integration.v1alpha1.ProxyService.CreateProxyEksClusterResource:input_type -> commonfate.control.integration.v1alpha1.CreateProxyEksClusterResourceRequest
	22, // 27: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxyEksClusterResource:input_type -> commonfate.control.integration.v1alpha1.UpdateProxyEksClusterResourceRequest
	24, // 28: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxyEksClusterResource:input_type -> commonfate.control.integration.v1alpha1.DeleteProxyEksClusterResourceRequest
	20, // 29: commonfate.control.integration.v1alpha1.ProxyService.GetProxyEksClusterResource:input_type -> commonfate.control.integration.v1alpha1.GetProxyEksClusterResourceRequest
	26, // 30: commonfate.control.integration.v1alpha1.ProxyService.CreateProxyEksServiceAccount:input_type -> commonfate.control.integration.v1alpha1.CreateProxyEksServiceAccountRequest
	30, // 31: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxyEksServiceAccount:input_type -> commonfate.control.integration.v1alpha1.UpdateProxyEksServiceAccountRequest
	32, // 32: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxyEksServiceAccount:input_type -> commonfate.control.integration.v1alpha1.DeleteProxyEksServiceAccountRequest
	28, // 33: commonfate.control.integration.v1alpha1.ProxyService.GetProxyEksServiceAccount:input_type -> commonfate.control.integration.v1alpha1.GetProxyEksServiceAccountRequest
	0,  // 34: commonfate.control.integration.v1alpha1.ProxyService.CreateProxy:input_type -> commonfate.control.integration.v1alpha1.CreateProxyRequest
	4,  // 35: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxy:input_type -> commonfate.control.integration.v1alpha1.UpdateProxyRequest
	6,  // 36: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxy:input_type -> commonfate.control.integration.v1alpha1.DeleteProxyRequest
	2,  // 37: commonfate.control.integration.v1alpha1.ProxyService.GetProxy:input_type -> commonfate.control.integration.v1alpha1.GetProxyRequest
	8,  // 38: commonfate.control.integration.v1alpha1.ProxyService.ListProxyResources:input_type -> commonfate.control.integration.v1alpha1.ListProxyResourcesRequest
	11, // 39: commonfate.control.integration.v1alpha1.ProxyService.CreateProxyRdsResource:output_type -> commonfate.control.integration.v1alpha1.CreateProxyRdsResourceResponse
	15, // 40: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxyRdsResource:output_type -> commonfate.control.integration.v1alpha1.UpdateProxyRdsResourceResponse
	17, // 41: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxyRdsResource:output_type -> commonfate.control.integration.v1alpha1.DeleteProxyRdsResourceResponse
	13, // 42: commonfate.control.integration.v1alpha1.ProxyService.GetProxyRdsResource:output_type -> commonfate.control.integration.v1alpha1.GetProxyRdsResourceResponse
	19, // 43: commonfate.control.integration.v1alpha1.ProxyService.CreateProxyEksClusterResource:output_type -> commonfate.control.integration.v1alpha1.CreateProxyEksClusterResourceResponse
	23, // 44: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxyEksClusterResource:output_type -> commonfate.control.integration.v1alpha1.UpdateProxyEksClusterResourceResponse
	25, // 45: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxyEksClusterResource:output_type -> commonfate.control.integration.v1alpha1.DeleteProxyEksClusterResourceResponse
	21, // 46: commonfate.control.integration.v1alpha1.ProxyService.GetProxyEksClusterResource:output_type -> commonfate.control.integration.v1alpha1.GetProxyEksClusterResourceResponse
	27, // 47: commonfate.control.integration.v1alpha1.ProxyService.CreateProxyEksServiceAccount:output_type -> commonfate.control.integration.v1alpha1.CreateProxyEksServiceAccountResponse
	31, // 48: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxyEksServiceAccount:output_type -> commonfate.control.integration.v1alpha1.UpdateProxyEksServiceAccountResponse
	33, // 49: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxyEksServiceAccount:output_type -> commonfate.control.integration.v1alpha1.DeleteProxyEksServiceAccountResponse
	29, // 50: commonfate.control.integration.v1alpha1.ProxyService.GetProxyEksServiceAccount:output_type -> commonfate.control.integration.v1alpha1.GetProxyEksServiceAccountResponse
	1,  // 51: commonfate.control.integration.v1alpha1.ProxyService.CreateProxy:output_type -> commonfate.control.integration.v1alpha1.CreateProxyResponse
	5,  // 52: commonfate.control.integration.v1alpha1.ProxyService.UpdateProxy:output_type -> commonfate.control.integration.v1alpha1.UpdateProxyResponse
	7,  // 53: commonfate.control.integration.v1alpha1.ProxyService.DeleteProxy:output_type -> commonfate.control.integration.v1alpha1.DeleteProxyResponse
	3,  // 54: commonfate.control.integration.v1alpha1.ProxyService.GetProxy:output_type -> commonfate.control.integration.v1alpha1.GetProxyResponse
	9,  // 55: commonfate.control.integration.v1alpha1.ProxyService.ListProxyResources:output_type -> commonfate.control.integration.v1alpha1.ListProxyResourcesResponse
	39, // [39:56] is the sub-list for method output_type
	22, // [22:39] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_commonfate_control_integration_v1alpha1_proxy_proto_init() }
func file_commonfate_control_integration_v1alpha1_proxy_proto_init() {
	if File_commonfate_control_integration_v1alpha1_proxy_proto != nil {
		return
	}
	file_commonfate_control_integration_v1alpha1_aws_proxy_proto_init()
	file_commonfate_control_integration_v1alpha1_proxy_resource_proto_init()
	file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[0].OneofWrappers = []any{
		(*CreateProxyRequest_AwsEcsProxyInstanceConfig)(nil),
	}
	file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[1].OneofWrappers = []any{
		(*CreateProxyResponse_AwsEcsProxyInstanceConfig)(nil),
	}
	file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[3].OneofWrappers = []any{
		(*GetProxyResponse_AwsEcsProxyInstanceConfig)(nil),
	}
	file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[4].OneofWrappers = []any{
		(*UpdateProxyRequest_AwsEcsProxyInstanceConfig)(nil),
	}
	file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes[5].OneofWrappers = []any{
		(*UpdateProxyResponse_AwsEcsProxyInstanceConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commonfate_control_integration_v1alpha1_proxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commonfate_control_integration_v1alpha1_proxy_proto_goTypes,
		DependencyIndexes: file_commonfate_control_integration_v1alpha1_proxy_proto_depIdxs,
		MessageInfos:      file_commonfate_control_integration_v1alpha1_proxy_proto_msgTypes,
	}.Build()
	File_commonfate_control_integration_v1alpha1_proxy_proto = out.File
	file_commonfate_control_integration_v1alpha1_proxy_proto_rawDesc = nil
	file_commonfate_control_integration_v1alpha1_proxy_proto_goTypes = nil
	file_commonfate_control_integration_v1alpha1_proxy_proto_depIdxs = nil
}
