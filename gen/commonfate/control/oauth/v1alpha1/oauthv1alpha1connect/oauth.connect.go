// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: commonfate/control/oauth/v1alpha1/oauth.proto

package oauthv1alpha1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1alpha1 "github.com/common-fate/sdk/gen/commonfate/control/oauth/v1alpha1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// OAuthServiceName is the fully-qualified name of the OAuthService service.
	OAuthServiceName = "commonfate.control.oauth.v1alpha1.OAuthService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// OAuthServiceGetPagerDutyIntegrationProcedure is the fully-qualified name of the OAuthService's
	// GetPagerDutyIntegration RPC.
	OAuthServiceGetPagerDutyIntegrationProcedure = "/commonfate.control.oauth.v1alpha1.OAuthService/GetPagerDutyIntegration"
	// OAuthServiceRemovePagerDutyIntegrationProcedure is the fully-qualified name of the OAuthService's
	// RemovePagerDutyIntegration RPC.
	OAuthServiceRemovePagerDutyIntegrationProcedure = "/commonfate.control.oauth.v1alpha1.OAuthService/RemovePagerDutyIntegration"
	// OAuthServiceGetSlackIntegrationProcedure is the fully-qualified name of the OAuthService's
	// GetSlackIntegration RPC.
	OAuthServiceGetSlackIntegrationProcedure = "/commonfate.control.oauth.v1alpha1.OAuthService/GetSlackIntegration"
	// OAuthServiceRemoveSlackIntegrationProcedure is the fully-qualified name of the OAuthService's
	// RemoveSlackIntegration RPC.
	OAuthServiceRemoveSlackIntegrationProcedure = "/commonfate.control.oauth.v1alpha1.OAuthService/RemoveSlackIntegration"
)

// OAuthServiceClient is a client for the commonfate.control.oauth.v1alpha1.OAuthService service.
type OAuthServiceClient interface {
	// rpc CreatePagerDutyIntegration(CreatePagerDutyIntegrationRequest) returns (CreatePagerDutyIntegrationResponse) {}
	GetPagerDutyIntegration(context.Context, *connect_go.Request[v1alpha1.GetPagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.GetPagerDutyIntegrationResponse], error)
	RemovePagerDutyIntegration(context.Context, *connect_go.Request[v1alpha1.RemovePagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.RemovePagerDutyIntegrationResponse], error)
	// rpc CreateSlackIntegration(CreateSlackIntegrationRequest) returns (CreateSlackIntegrationResponse) {}
	GetSlackIntegration(context.Context, *connect_go.Request[v1alpha1.GetSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.GetSlackIntegrationResponse], error)
	RemoveSlackIntegration(context.Context, *connect_go.Request[v1alpha1.RemoveSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.RemoveSlackIntegrationResponse], error)
}

// NewOAuthServiceClient constructs a client for the commonfate.control.oauth.v1alpha1.OAuthService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewOAuthServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) OAuthServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &oAuthServiceClient{
		getPagerDutyIntegration: connect_go.NewClient[v1alpha1.GetPagerDutyIntegrationRequest, v1alpha1.GetPagerDutyIntegrationResponse](
			httpClient,
			baseURL+OAuthServiceGetPagerDutyIntegrationProcedure,
			opts...,
		),
		removePagerDutyIntegration: connect_go.NewClient[v1alpha1.RemovePagerDutyIntegrationRequest, v1alpha1.RemovePagerDutyIntegrationResponse](
			httpClient,
			baseURL+OAuthServiceRemovePagerDutyIntegrationProcedure,
			opts...,
		),
		getSlackIntegration: connect_go.NewClient[v1alpha1.GetSlackIntegrationRequest, v1alpha1.GetSlackIntegrationResponse](
			httpClient,
			baseURL+OAuthServiceGetSlackIntegrationProcedure,
			opts...,
		),
		removeSlackIntegration: connect_go.NewClient[v1alpha1.RemoveSlackIntegrationRequest, v1alpha1.RemoveSlackIntegrationResponse](
			httpClient,
			baseURL+OAuthServiceRemoveSlackIntegrationProcedure,
			opts...,
		),
	}
}

// oAuthServiceClient implements OAuthServiceClient.
type oAuthServiceClient struct {
	getPagerDutyIntegration    *connect_go.Client[v1alpha1.GetPagerDutyIntegrationRequest, v1alpha1.GetPagerDutyIntegrationResponse]
	removePagerDutyIntegration *connect_go.Client[v1alpha1.RemovePagerDutyIntegrationRequest, v1alpha1.RemovePagerDutyIntegrationResponse]
	getSlackIntegration        *connect_go.Client[v1alpha1.GetSlackIntegrationRequest, v1alpha1.GetSlackIntegrationResponse]
	removeSlackIntegration     *connect_go.Client[v1alpha1.RemoveSlackIntegrationRequest, v1alpha1.RemoveSlackIntegrationResponse]
}

// GetPagerDutyIntegration calls
// commonfate.control.oauth.v1alpha1.OAuthService.GetPagerDutyIntegration.
func (c *oAuthServiceClient) GetPagerDutyIntegration(ctx context.Context, req *connect_go.Request[v1alpha1.GetPagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.GetPagerDutyIntegrationResponse], error) {
	return c.getPagerDutyIntegration.CallUnary(ctx, req)
}

// RemovePagerDutyIntegration calls
// commonfate.control.oauth.v1alpha1.OAuthService.RemovePagerDutyIntegration.
func (c *oAuthServiceClient) RemovePagerDutyIntegration(ctx context.Context, req *connect_go.Request[v1alpha1.RemovePagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.RemovePagerDutyIntegrationResponse], error) {
	return c.removePagerDutyIntegration.CallUnary(ctx, req)
}

// GetSlackIntegration calls commonfate.control.oauth.v1alpha1.OAuthService.GetSlackIntegration.
func (c *oAuthServiceClient) GetSlackIntegration(ctx context.Context, req *connect_go.Request[v1alpha1.GetSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.GetSlackIntegrationResponse], error) {
	return c.getSlackIntegration.CallUnary(ctx, req)
}

// RemoveSlackIntegration calls
// commonfate.control.oauth.v1alpha1.OAuthService.RemoveSlackIntegration.
func (c *oAuthServiceClient) RemoveSlackIntegration(ctx context.Context, req *connect_go.Request[v1alpha1.RemoveSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.RemoveSlackIntegrationResponse], error) {
	return c.removeSlackIntegration.CallUnary(ctx, req)
}

// OAuthServiceHandler is an implementation of the commonfate.control.oauth.v1alpha1.OAuthService
// service.
type OAuthServiceHandler interface {
	// rpc CreatePagerDutyIntegration(CreatePagerDutyIntegrationRequest) returns (CreatePagerDutyIntegrationResponse) {}
	GetPagerDutyIntegration(context.Context, *connect_go.Request[v1alpha1.GetPagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.GetPagerDutyIntegrationResponse], error)
	RemovePagerDutyIntegration(context.Context, *connect_go.Request[v1alpha1.RemovePagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.RemovePagerDutyIntegrationResponse], error)
	// rpc CreateSlackIntegration(CreateSlackIntegrationRequest) returns (CreateSlackIntegrationResponse) {}
	GetSlackIntegration(context.Context, *connect_go.Request[v1alpha1.GetSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.GetSlackIntegrationResponse], error)
	RemoveSlackIntegration(context.Context, *connect_go.Request[v1alpha1.RemoveSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.RemoveSlackIntegrationResponse], error)
}

// NewOAuthServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewOAuthServiceHandler(svc OAuthServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	oAuthServiceGetPagerDutyIntegrationHandler := connect_go.NewUnaryHandler(
		OAuthServiceGetPagerDutyIntegrationProcedure,
		svc.GetPagerDutyIntegration,
		opts...,
	)
	oAuthServiceRemovePagerDutyIntegrationHandler := connect_go.NewUnaryHandler(
		OAuthServiceRemovePagerDutyIntegrationProcedure,
		svc.RemovePagerDutyIntegration,
		opts...,
	)
	oAuthServiceGetSlackIntegrationHandler := connect_go.NewUnaryHandler(
		OAuthServiceGetSlackIntegrationProcedure,
		svc.GetSlackIntegration,
		opts...,
	)
	oAuthServiceRemoveSlackIntegrationHandler := connect_go.NewUnaryHandler(
		OAuthServiceRemoveSlackIntegrationProcedure,
		svc.RemoveSlackIntegration,
		opts...,
	)
	return "/commonfate.control.oauth.v1alpha1.OAuthService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case OAuthServiceGetPagerDutyIntegrationProcedure:
			oAuthServiceGetPagerDutyIntegrationHandler.ServeHTTP(w, r)
		case OAuthServiceRemovePagerDutyIntegrationProcedure:
			oAuthServiceRemovePagerDutyIntegrationHandler.ServeHTTP(w, r)
		case OAuthServiceGetSlackIntegrationProcedure:
			oAuthServiceGetSlackIntegrationHandler.ServeHTTP(w, r)
		case OAuthServiceRemoveSlackIntegrationProcedure:
			oAuthServiceRemoveSlackIntegrationHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedOAuthServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedOAuthServiceHandler struct{}

func (UnimplementedOAuthServiceHandler) GetPagerDutyIntegration(context.Context, *connect_go.Request[v1alpha1.GetPagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.GetPagerDutyIntegrationResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.control.oauth.v1alpha1.OAuthService.GetPagerDutyIntegration is not implemented"))
}

func (UnimplementedOAuthServiceHandler) RemovePagerDutyIntegration(context.Context, *connect_go.Request[v1alpha1.RemovePagerDutyIntegrationRequest]) (*connect_go.Response[v1alpha1.RemovePagerDutyIntegrationResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.control.oauth.v1alpha1.OAuthService.RemovePagerDutyIntegration is not implemented"))
}

func (UnimplementedOAuthServiceHandler) GetSlackIntegration(context.Context, *connect_go.Request[v1alpha1.GetSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.GetSlackIntegrationResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.control.oauth.v1alpha1.OAuthService.GetSlackIntegration is not implemented"))
}

func (UnimplementedOAuthServiceHandler) RemoveSlackIntegration(context.Context, *connect_go.Request[v1alpha1.RemoveSlackIntegrationRequest]) (*connect_go.Response[v1alpha1.RemoveSlackIntegrationResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.control.oauth.v1alpha1.OAuthService.RemoveSlackIntegration is not implemented"))
}
