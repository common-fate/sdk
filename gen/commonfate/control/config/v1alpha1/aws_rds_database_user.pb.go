// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: commonfate/control/config/v1alpha1/aws_rds_database_user.proto

package configv1alpha1

import (
	_ "github.com/common-fate/sdk/gen/commonfate/authz/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAWSRDSDatabaseUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Database string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *CreateAWSRDSDatabaseUserRequest) Reset() {
	*x = CreateAWSRDSDatabaseUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAWSRDSDatabaseUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAWSRDSDatabaseUserRequest) ProtoMessage() {}

func (x *CreateAWSRDSDatabaseUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAWSRDSDatabaseUserRequest.ProtoReflect.Descriptor instead.
func (*CreateAWSRDSDatabaseUserRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAWSRDSDatabaseUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAWSRDSDatabaseUserRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type AWSRDSDatabaseUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Database string `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *AWSRDSDatabaseUser) Reset() {
	*x = AWSRDSDatabaseUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSRDSDatabaseUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSRDSDatabaseUser) ProtoMessage() {}

func (x *AWSRDSDatabaseUser) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSRDSDatabaseUser.ProtoReflect.Descriptor instead.
func (*AWSRDSDatabaseUser) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{1}
}

func (x *AWSRDSDatabaseUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AWSRDSDatabaseUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AWSRDSDatabaseUser) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type CreateAWSRDSDatabaseUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsRdsDatabase *AWSRDSDatabaseUser `protobuf:"bytes,1,opt,name=aws_rds_database,json=awsRdsDatabase,proto3" json:"aws_rds_database,omitempty"`
}

func (x *CreateAWSRDSDatabaseUserResponse) Reset() {
	*x = CreateAWSRDSDatabaseUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAWSRDSDatabaseUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAWSRDSDatabaseUserResponse) ProtoMessage() {}

func (x *CreateAWSRDSDatabaseUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAWSRDSDatabaseUserResponse.ProtoReflect.Descriptor instead.
func (*CreateAWSRDSDatabaseUserResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAWSRDSDatabaseUserResponse) GetAwsRdsDatabase() *AWSRDSDatabaseUser {
	if x != nil {
		return x.AwsRdsDatabase
	}
	return nil
}

type GetAWSRDSDatabaseUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAWSRDSDatabaseUserRequest) Reset() {
	*x = GetAWSRDSDatabaseUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAWSRDSDatabaseUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAWSRDSDatabaseUserRequest) ProtoMessage() {}

func (x *GetAWSRDSDatabaseUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAWSRDSDatabaseUserRequest.ProtoReflect.Descriptor instead.
func (*GetAWSRDSDatabaseUserRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{3}
}

func (x *GetAWSRDSDatabaseUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAWSRDSDatabaseUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsRdsDatabase *AWSRDSDatabaseUser `protobuf:"bytes,1,opt,name=aws_rds_database,json=awsRdsDatabase,proto3" json:"aws_rds_database,omitempty"`
}

func (x *GetAWSRDSDatabaseUserResponse) Reset() {
	*x = GetAWSRDSDatabaseUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAWSRDSDatabaseUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAWSRDSDatabaseUserResponse) ProtoMessage() {}

func (x *GetAWSRDSDatabaseUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAWSRDSDatabaseUserResponse.ProtoReflect.Descriptor instead.
func (*GetAWSRDSDatabaseUserResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{4}
}

func (x *GetAWSRDSDatabaseUserResponse) GetAwsRdsDatabase() *AWSRDSDatabaseUser {
	if x != nil {
		return x.AwsRdsDatabase
	}
	return nil
}

type UpdateAWSRDSDatabaseUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsRdsDatabase *AWSRDSDatabaseUser `protobuf:"bytes,1,opt,name=aws_rds_database,json=awsRdsDatabase,proto3" json:"aws_rds_database,omitempty"`
}

func (x *UpdateAWSRDSDatabaseUserRequest) Reset() {
	*x = UpdateAWSRDSDatabaseUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAWSRDSDatabaseUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAWSRDSDatabaseUserRequest) ProtoMessage() {}

func (x *UpdateAWSRDSDatabaseUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAWSRDSDatabaseUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateAWSRDSDatabaseUserRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAWSRDSDatabaseUserRequest) GetAwsRdsDatabase() *AWSRDSDatabaseUser {
	if x != nil {
		return x.AwsRdsDatabase
	}
	return nil
}

type UpdateAWSRDSDatabaseUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsRdsDatabase *AWSRDSDatabaseUser `protobuf:"bytes,1,opt,name=aws_rds_database,json=awsRdsDatabase,proto3" json:"aws_rds_database,omitempty"`
}

func (x *UpdateAWSRDSDatabaseUserResponse) Reset() {
	*x = UpdateAWSRDSDatabaseUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAWSRDSDatabaseUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAWSRDSDatabaseUserResponse) ProtoMessage() {}

func (x *UpdateAWSRDSDatabaseUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAWSRDSDatabaseUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateAWSRDSDatabaseUserResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAWSRDSDatabaseUserResponse) GetAwsRdsDatabase() *AWSRDSDatabaseUser {
	if x != nil {
		return x.AwsRdsDatabase
	}
	return nil
}

type DeleteAWSRDSDatabaseUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAWSRDSDatabaseUserRequest) Reset() {
	*x = DeleteAWSRDSDatabaseUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAWSRDSDatabaseUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAWSRDSDatabaseUserRequest) ProtoMessage() {}

func (x *DeleteAWSRDSDatabaseUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAWSRDSDatabaseUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteAWSRDSDatabaseUserRequest) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAWSRDSDatabaseUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAWSRDSDatabaseUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAWSRDSDatabaseUserResponse) Reset() {
	*x = DeleteAWSRDSDatabaseUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAWSRDSDatabaseUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAWSRDSDatabaseUserResponse) ProtoMessage() {}

func (x *DeleteAWSRDSDatabaseUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAWSRDSDatabaseUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteAWSRDSDatabaseUserResponse) Descriptor() ([]byte, []int) {
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAWSRDSDatabaseUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_commonfate_control_config_v1alpha1_aws_rds_database_user_proto protoreflect.FileDescriptor

var file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x22, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x1a, 0x29, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x51, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x54, 0x0a, 0x12, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x10, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53,
	0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x0e, 0x61, 0x77, 0x73, 0x52, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x2e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x81, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x60, 0x0a, 0x10, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x0e, 0x61, 0x77, 0x73, 0x52, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x57,
	0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x10, 0x61, 0x77, 0x73, 0x5f, 0x72,
	0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0e, 0x61, 0x77, 0x73, 0x52, 0x64,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x20, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60,
	0x0a, 0x10, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57,
	0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x0e, 0x61, 0x77, 0x73, 0x52, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x22, 0x31, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x57, 0x53,
	0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xbe, 0x05, 0x0a, 0x19, 0x41, 0x57, 0x53, 0x52,
	0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa7, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x57,
	0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xa2, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04,
	0x88, 0xb5, 0x18, 0x01, 0x12, 0xa7, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x57, 0x53,
	0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66,
	0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa7,
	0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x43, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x44, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52,
	0x44, 0x53, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xbe, 0x02, 0x0a, 0x26, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x42, 0x17, 0x41, 0x77, 0x73, 0x52, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x50,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2d, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xa2, 0x02, 0x03, 0x43, 0x43, 0x43, 0xaa, 0x02, 0x22, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66,
	0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x22, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x5c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xe2, 0x02, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x5c, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x25, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x3a, 0x3a,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a,
	0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescOnce sync.Once
	file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescData = file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDesc
)

func file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescGZIP() []byte {
	file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescOnce.Do(func() {
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescData)
	})
	return file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDescData
}

var file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_goTypes = []any{
	(*CreateAWSRDSDatabaseUserRequest)(nil),  // 0: commonfate.control.config.v1alpha1.CreateAWSRDSDatabaseUserRequest
	(*AWSRDSDatabaseUser)(nil),               // 1: commonfate.control.config.v1alpha1.AWSRDSDatabaseUser
	(*CreateAWSRDSDatabaseUserResponse)(nil), // 2: commonfate.control.config.v1alpha1.CreateAWSRDSDatabaseUserResponse
	(*GetAWSRDSDatabaseUserRequest)(nil),     // 3: commonfate.control.config.v1alpha1.GetAWSRDSDatabaseUserRequest
	(*GetAWSRDSDatabaseUserResponse)(nil),    // 4: commonfate.control.config.v1alpha1.GetAWSRDSDatabaseUserResponse
	(*UpdateAWSRDSDatabaseUserRequest)(nil),  // 5: commonfate.control.config.v1alpha1.UpdateAWSRDSDatabaseUserRequest
	(*UpdateAWSRDSDatabaseUserResponse)(nil), // 6: commonfate.control.config.v1alpha1.UpdateAWSRDSDatabaseUserResponse
	(*DeleteAWSRDSDatabaseUserRequest)(nil),  // 7: commonfate.control.config.v1alpha1.DeleteAWSRDSDatabaseUserRequest
	(*DeleteAWSRDSDatabaseUserResponse)(nil), // 8: commonfate.control.config.v1alpha1.DeleteAWSRDSDatabaseUserResponse
}
var file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_depIdxs = []int32{
	1, // 0: commonfate.control.config.v1alpha1.CreateAWSRDSDatabaseUserResponse.aws_rds_database:type_name -> commonfate.control.config.v1alpha1.AWSRDSDatabaseUser
	1, // 1: commonfate.control.config.v1alpha1.GetAWSRDSDatabaseUserResponse.aws_rds_database:type_name -> commonfate.control.config.v1alpha1.AWSRDSDatabaseUser
	1, // 2: commonfate.control.config.v1alpha1.UpdateAWSRDSDatabaseUserRequest.aws_rds_database:type_name -> commonfate.control.config.v1alpha1.AWSRDSDatabaseUser
	1, // 3: commonfate.control.config.v1alpha1.UpdateAWSRDSDatabaseUserResponse.aws_rds_database:type_name -> commonfate.control.config.v1alpha1.AWSRDSDatabaseUser
	0, // 4: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.CreateAWSRDSDatabaseUser:input_type -> commonfate.control.config.v1alpha1.CreateAWSRDSDatabaseUserRequest
	3, // 5: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.GetAWSRDSDatabaseUser:input_type -> commonfate.control.config.v1alpha1.GetAWSRDSDatabaseUserRequest
	5, // 6: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.UpdateAWSRDSDatabaseUser:input_type -> commonfate.control.config.v1alpha1.UpdateAWSRDSDatabaseUserRequest
	7, // 7: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.DeleteAWSRDSDatabaseUser:input_type -> commonfate.control.config.v1alpha1.DeleteAWSRDSDatabaseUserRequest
	2, // 8: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.CreateAWSRDSDatabaseUser:output_type -> commonfate.control.config.v1alpha1.CreateAWSRDSDatabaseUserResponse
	4, // 9: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.GetAWSRDSDatabaseUser:output_type -> commonfate.control.config.v1alpha1.GetAWSRDSDatabaseUserResponse
	6, // 10: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.UpdateAWSRDSDatabaseUser:output_type -> commonfate.control.config.v1alpha1.UpdateAWSRDSDatabaseUserResponse
	8, // 11: commonfate.control.config.v1alpha1.AWSRDSDatabaseUserService.DeleteAWSRDSDatabaseUser:output_type -> commonfate.control.config.v1alpha1.DeleteAWSRDSDatabaseUserResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_init() }
func file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_init() {
	if File_commonfate_control_config_v1alpha1_aws_rds_database_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAWSRDSDatabaseUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AWSRDSDatabaseUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAWSRDSDatabaseUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAWSRDSDatabaseUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAWSRDSDatabaseUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAWSRDSDatabaseUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAWSRDSDatabaseUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAWSRDSDatabaseUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAWSRDSDatabaseUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_goTypes,
		DependencyIndexes: file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_depIdxs,
		MessageInfos:      file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_msgTypes,
	}.Build()
	File_commonfate_control_config_v1alpha1_aws_rds_database_user_proto = out.File
	file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_rawDesc = nil
	file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_goTypes = nil
	file_commonfate_control_config_v1alpha1_aws_rds_database_user_proto_depIdxs = nil
}
