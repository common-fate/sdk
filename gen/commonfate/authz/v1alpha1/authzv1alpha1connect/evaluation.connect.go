// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: commonfate/authz/v1alpha1/evaluation.proto

package authzv1alpha1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1alpha1 "github.com/common-fate/sdk/gen/commonfate/authz/v1alpha1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// EvaluationServiceName is the fully-qualified name of the EvaluationService service.
	EvaluationServiceName = "commonfate.authz.v1alpha1.EvaluationService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// EvaluationServiceQueryEvaluationsProcedure is the fully-qualified name of the EvaluationService's
	// QueryEvaluations RPC.
	EvaluationServiceQueryEvaluationsProcedure = "/commonfate.authz.v1alpha1.EvaluationService/QueryEvaluations"
	// EvaluationServiceDebugEvaluationProcedure is the fully-qualified name of the EvaluationService's
	// DebugEvaluation RPC.
	EvaluationServiceDebugEvaluationProcedure = "/commonfate.authz.v1alpha1.EvaluationService/DebugEvaluation"
)

// EvaluationServiceClient is a client for the commonfate.authz.v1alpha1.EvaluationService service.
type EvaluationServiceClient interface {
	QueryEvaluations(context.Context, *connect_go.Request[v1alpha1.QueryEvaluationsRequest]) (*connect_go.Response[v1alpha1.QueryEvaluationsResponse], error)
	// Fetches debug information about the evaluation of a particular decision
	DebugEvaluation(context.Context, *connect_go.Request[v1alpha1.DebugEvaluationRequest]) (*connect_go.Response[v1alpha1.DebugEvaluationResponse], error)
}

// NewEvaluationServiceClient constructs a client for the
// commonfate.authz.v1alpha1.EvaluationService service. By default, it uses the Connect protocol
// with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed requests. To
// use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or connect.WithGRPCWeb()
// options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewEvaluationServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) EvaluationServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &evaluationServiceClient{
		queryEvaluations: connect_go.NewClient[v1alpha1.QueryEvaluationsRequest, v1alpha1.QueryEvaluationsResponse](
			httpClient,
			baseURL+EvaluationServiceQueryEvaluationsProcedure,
			opts...,
		),
		debugEvaluation: connect_go.NewClient[v1alpha1.DebugEvaluationRequest, v1alpha1.DebugEvaluationResponse](
			httpClient,
			baseURL+EvaluationServiceDebugEvaluationProcedure,
			opts...,
		),
	}
}

// evaluationServiceClient implements EvaluationServiceClient.
type evaluationServiceClient struct {
	queryEvaluations *connect_go.Client[v1alpha1.QueryEvaluationsRequest, v1alpha1.QueryEvaluationsResponse]
	debugEvaluation  *connect_go.Client[v1alpha1.DebugEvaluationRequest, v1alpha1.DebugEvaluationResponse]
}

// QueryEvaluations calls commonfate.authz.v1alpha1.EvaluationService.QueryEvaluations.
func (c *evaluationServiceClient) QueryEvaluations(ctx context.Context, req *connect_go.Request[v1alpha1.QueryEvaluationsRequest]) (*connect_go.Response[v1alpha1.QueryEvaluationsResponse], error) {
	return c.queryEvaluations.CallUnary(ctx, req)
}

// DebugEvaluation calls commonfate.authz.v1alpha1.EvaluationService.DebugEvaluation.
func (c *evaluationServiceClient) DebugEvaluation(ctx context.Context, req *connect_go.Request[v1alpha1.DebugEvaluationRequest]) (*connect_go.Response[v1alpha1.DebugEvaluationResponse], error) {
	return c.debugEvaluation.CallUnary(ctx, req)
}

// EvaluationServiceHandler is an implementation of the commonfate.authz.v1alpha1.EvaluationService
// service.
type EvaluationServiceHandler interface {
	QueryEvaluations(context.Context, *connect_go.Request[v1alpha1.QueryEvaluationsRequest]) (*connect_go.Response[v1alpha1.QueryEvaluationsResponse], error)
	// Fetches debug information about the evaluation of a particular decision
	DebugEvaluation(context.Context, *connect_go.Request[v1alpha1.DebugEvaluationRequest]) (*connect_go.Response[v1alpha1.DebugEvaluationResponse], error)
}

// NewEvaluationServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewEvaluationServiceHandler(svc EvaluationServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	evaluationServiceQueryEvaluationsHandler := connect_go.NewUnaryHandler(
		EvaluationServiceQueryEvaluationsProcedure,
		svc.QueryEvaluations,
		opts...,
	)
	evaluationServiceDebugEvaluationHandler := connect_go.NewUnaryHandler(
		EvaluationServiceDebugEvaluationProcedure,
		svc.DebugEvaluation,
		opts...,
	)
	return "/commonfate.authz.v1alpha1.EvaluationService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case EvaluationServiceQueryEvaluationsProcedure:
			evaluationServiceQueryEvaluationsHandler.ServeHTTP(w, r)
		case EvaluationServiceDebugEvaluationProcedure:
			evaluationServiceDebugEvaluationHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedEvaluationServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedEvaluationServiceHandler struct{}

func (UnimplementedEvaluationServiceHandler) QueryEvaluations(context.Context, *connect_go.Request[v1alpha1.QueryEvaluationsRequest]) (*connect_go.Response[v1alpha1.QueryEvaluationsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.authz.v1alpha1.EvaluationService.QueryEvaluations is not implemented"))
}

func (UnimplementedEvaluationServiceHandler) DebugEvaluation(context.Context, *connect_go.Request[v1alpha1.DebugEvaluationRequest]) (*connect_go.Response[v1alpha1.DebugEvaluationResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.authz.v1alpha1.EvaluationService.DebugEvaluation is not implemented"))
}
