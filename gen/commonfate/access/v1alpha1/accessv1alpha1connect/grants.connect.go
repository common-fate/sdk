// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: commonfate/access/v1alpha1/grants.proto

package accessv1alpha1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1alpha1 "github.com/common-fate/sdk/gen/commonfate/access/v1alpha1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// GrantServiceName is the fully-qualified name of the GrantService service.
	GrantServiceName = "commonfate.access.v1alpha1.GrantService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// GrantServiceQueryGrantsProcedure is the fully-qualified name of the GrantService's QueryGrants
	// RPC.
	GrantServiceQueryGrantsProcedure = "/commonfate.access.v1alpha1.GrantService/QueryGrants"
	// GrantServiceQueryGrantChildrenProcedure is the fully-qualified name of the GrantService's
	// QueryGrantChildren RPC.
	GrantServiceQueryGrantChildrenProcedure = "/commonfate.access.v1alpha1.GrantService/QueryGrantChildren"
)

// GrantServiceClient is a client for the commonfate.access.v1alpha1.GrantService service.
type GrantServiceClient interface {
	QueryGrants(context.Context, *connect_go.Request[v1alpha1.QueryGrantsRequest]) (*connect_go.Response[v1alpha1.QueryGrantsResponse], error)
	QueryGrantChildren(context.Context, *connect_go.Request[v1alpha1.QueryGrantChildrenRequest]) (*connect_go.Response[v1alpha1.QueryGrantChildrenResponse], error)
}

// NewGrantServiceClient constructs a client for the commonfate.access.v1alpha1.GrantService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewGrantServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) GrantServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &grantServiceClient{
		queryGrants: connect_go.NewClient[v1alpha1.QueryGrantsRequest, v1alpha1.QueryGrantsResponse](
			httpClient,
			baseURL+GrantServiceQueryGrantsProcedure,
			opts...,
		),
		queryGrantChildren: connect_go.NewClient[v1alpha1.QueryGrantChildrenRequest, v1alpha1.QueryGrantChildrenResponse](
			httpClient,
			baseURL+GrantServiceQueryGrantChildrenProcedure,
			opts...,
		),
	}
}

// grantServiceClient implements GrantServiceClient.
type grantServiceClient struct {
	queryGrants        *connect_go.Client[v1alpha1.QueryGrantsRequest, v1alpha1.QueryGrantsResponse]
	queryGrantChildren *connect_go.Client[v1alpha1.QueryGrantChildrenRequest, v1alpha1.QueryGrantChildrenResponse]
}

// QueryGrants calls commonfate.access.v1alpha1.GrantService.QueryGrants.
func (c *grantServiceClient) QueryGrants(ctx context.Context, req *connect_go.Request[v1alpha1.QueryGrantsRequest]) (*connect_go.Response[v1alpha1.QueryGrantsResponse], error) {
	return c.queryGrants.CallUnary(ctx, req)
}

// QueryGrantChildren calls commonfate.access.v1alpha1.GrantService.QueryGrantChildren.
func (c *grantServiceClient) QueryGrantChildren(ctx context.Context, req *connect_go.Request[v1alpha1.QueryGrantChildrenRequest]) (*connect_go.Response[v1alpha1.QueryGrantChildrenResponse], error) {
	return c.queryGrantChildren.CallUnary(ctx, req)
}

// GrantServiceHandler is an implementation of the commonfate.access.v1alpha1.GrantService service.
type GrantServiceHandler interface {
	QueryGrants(context.Context, *connect_go.Request[v1alpha1.QueryGrantsRequest]) (*connect_go.Response[v1alpha1.QueryGrantsResponse], error)
	QueryGrantChildren(context.Context, *connect_go.Request[v1alpha1.QueryGrantChildrenRequest]) (*connect_go.Response[v1alpha1.QueryGrantChildrenResponse], error)
}

// NewGrantServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewGrantServiceHandler(svc GrantServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	grantServiceQueryGrantsHandler := connect_go.NewUnaryHandler(
		GrantServiceQueryGrantsProcedure,
		svc.QueryGrants,
		opts...,
	)
	grantServiceQueryGrantChildrenHandler := connect_go.NewUnaryHandler(
		GrantServiceQueryGrantChildrenProcedure,
		svc.QueryGrantChildren,
		opts...,
	)
	return "/commonfate.access.v1alpha1.GrantService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case GrantServiceQueryGrantsProcedure:
			grantServiceQueryGrantsHandler.ServeHTTP(w, r)
		case GrantServiceQueryGrantChildrenProcedure:
			grantServiceQueryGrantChildrenHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedGrantServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedGrantServiceHandler struct{}

func (UnimplementedGrantServiceHandler) QueryGrants(context.Context, *connect_go.Request[v1alpha1.QueryGrantsRequest]) (*connect_go.Response[v1alpha1.QueryGrantsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.access.v1alpha1.GrantService.QueryGrants is not implemented"))
}

func (UnimplementedGrantServiceHandler) QueryGrantChildren(context.Context, *connect_go.Request[v1alpha1.QueryGrantChildrenRequest]) (*connect_go.Response[v1alpha1.QueryGrantChildrenResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("commonfate.access.v1alpha1.GrantService.QueryGrantChildren is not implemented"))
}
