// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: commonfate/leastprivilege/v1alpha1/entitlement_usage.proto

package leastprivilegev1alpha1

import (
	v1alpha1 "github.com/common-fate/sdk/gen/commonfate/access/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Usage int32

const (
	// It was not possible to infer whether the entitlement is in use or not.
	Usage_USAGE_UNSPECIFIED Usage = 0
	// The entitlement is currently in use.
	Usage_USAGE_IN_USE Usage = 3
	// The entitlement is unused.
	Usage_USAGE_UNUSED Usage = 4
)

// Enum value maps for Usage.
var (
	Usage_name = map[int32]string{
		0: "USAGE_UNSPECIFIED",
		3: "USAGE_IN_USE",
		4: "USAGE_UNUSED",
	}
	Usage_value = map[string]int32{
		"USAGE_UNSPECIFIED": 0,
		"USAGE_IN_USE":      3,
		"USAGE_UNUSED":      4,
	}
)

func (x Usage) Enum() *Usage {
	p := new(Usage)
	*p = x
	return p
}

func (x Usage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Usage) Descriptor() protoreflect.EnumDescriptor {
	return file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_enumTypes[0].Descriptor()
}

func (Usage) Type() protoreflect.EnumType {
	return &file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_enumTypes[0]
}

func (x Usage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Usage.Descriptor instead.
func (Usage) EnumDescriptor() ([]byte, []int) {
	return file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescGZIP(), []int{0}
}

type EntitlementUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      *v1alpha1.NamedEID     `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Role        *v1alpha1.NamedEID     `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Principal   *v1alpha1.User         `protobuf:"bytes,3,opt,name=principal,proto3" json:"principal,omitempty"`
	Usage       Usage                  `protobuf:"varint,4,opt,name=Usage,proto3,enum=commonfate.leastprivilege.v1alpha1.Usage" json:"Usage,omitempty"`
	UsageReason string                 `protobuf:"bytes,5,opt,name=usage_reason,json=usageReason,proto3" json:"usage_reason,omitempty"`
	AccessPaths []*AccessPath          `protobuf:"bytes,6,rep,name=access_paths,json=accessPaths,proto3" json:"access_paths,omitempty"`
	LastUsed    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_used,json=lastUsed,proto3,oneof" json:"last_used,omitempty"`
}

func (x *EntitlementUsage) Reset() {
	*x = EntitlementUsage{}
	mi := &file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntitlementUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementUsage) ProtoMessage() {}

func (x *EntitlementUsage) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementUsage.ProtoReflect.Descriptor instead.
func (*EntitlementUsage) Descriptor() ([]byte, []int) {
	return file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescGZIP(), []int{0}
}

func (x *EntitlementUsage) GetTarget() *v1alpha1.NamedEID {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *EntitlementUsage) GetRole() *v1alpha1.NamedEID {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *EntitlementUsage) GetPrincipal() *v1alpha1.User {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *EntitlementUsage) GetUsage() Usage {
	if x != nil {
		return x.Usage
	}
	return Usage_USAGE_UNSPECIFIED
}

func (x *EntitlementUsage) GetUsageReason() string {
	if x != nil {
		return x.UsageReason
	}
	return ""
}

func (x *EntitlementUsage) GetAccessPaths() []*AccessPath {
	if x != nil {
		return x.AccessPaths
	}
	return nil
}

func (x *EntitlementUsage) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

type AccessPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []*v1alpha1.NamedEID `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
}

func (x *AccessPath) Reset() {
	*x = AccessPath{}
	mi := &file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPath) ProtoMessage() {}

func (x *AccessPath) ProtoReflect() protoreflect.Message {
	mi := &file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPath.ProtoReflect.Descriptor instead.
func (*AccessPath) Descriptor() ([]byte, []int) {
	return file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescGZIP(), []int{1}
}

func (x *AccessPath) GetPath() []*v1alpha1.NamedEID {
	if x != nil {
		return x.Path
	}
	return nil
}

var File_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto protoreflect.FileDescriptor

var file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x65, 0x61,
	0x73, 0x74, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x1a, 0x2a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e, 0x61, 0x6d,
	0x65, 0x64, 0x5f, 0x65, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x03, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x49, 0x44, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61,
	0x74, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x49, 0x44, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x12, 0x3f, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x6c, 0x65,
	0x61, 0x73, 0x74, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x45, 0x49, 0x44, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x2a, 0x42, 0x0a, 0x05,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44, 0x10, 0x04,
	0x42, 0xc3, 0x02, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66,
	0x61, 0x74, 0x65, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x15, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x66, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x64, 0x6b,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x2f,
	0x6c, 0x65, 0x61, 0x73, 0x74, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02,
	0x03, 0x43, 0x4c, 0x58, 0xaa, 0x02, 0x22, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74,
	0x65, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x22, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x5c, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x5c, 0x4c, 0x65, 0x61, 0x73,
	0x74, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x24, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x66, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x4c, 0x65,
	0x61, 0x73, 0x74, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescOnce sync.Once
	file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescData = file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDesc
)

func file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescGZIP() []byte {
	file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescOnce.Do(func() {
		file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescData = protoimpl.X.CompressGZIP(file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescData)
	})
	return file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDescData
}

var file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_goTypes = []any{
	(Usage)(0),                    // 0: commonfate.leastprivilege.v1alpha1.Usage
	(*EntitlementUsage)(nil),      // 1: commonfate.leastprivilege.v1alpha1.EntitlementUsage
	(*AccessPath)(nil),            // 2: commonfate.leastprivilege.v1alpha1.AccessPath
	(*v1alpha1.NamedEID)(nil),     // 3: commonfate.access.v1alpha1.NamedEID
	(*v1alpha1.User)(nil),         // 4: commonfate.access.v1alpha1.User
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_depIdxs = []int32{
	3, // 0: commonfate.leastprivilege.v1alpha1.EntitlementUsage.target:type_name -> commonfate.access.v1alpha1.NamedEID
	3, // 1: commonfate.leastprivilege.v1alpha1.EntitlementUsage.role:type_name -> commonfate.access.v1alpha1.NamedEID
	4, // 2: commonfate.leastprivilege.v1alpha1.EntitlementUsage.principal:type_name -> commonfate.access.v1alpha1.User
	0, // 3: commonfate.leastprivilege.v1alpha1.EntitlementUsage.Usage:type_name -> commonfate.leastprivilege.v1alpha1.Usage
	2, // 4: commonfate.leastprivilege.v1alpha1.EntitlementUsage.access_paths:type_name -> commonfate.leastprivilege.v1alpha1.AccessPath
	5, // 5: commonfate.leastprivilege.v1alpha1.EntitlementUsage.last_used:type_name -> google.protobuf.Timestamp
	3, // 6: commonfate.leastprivilege.v1alpha1.AccessPath.path:type_name -> commonfate.access.v1alpha1.NamedEID
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_init() }
func file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_init() {
	if File_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto != nil {
		return
	}
	file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_goTypes,
		DependencyIndexes: file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_depIdxs,
		EnumInfos:         file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_enumTypes,
		MessageInfos:      file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_msgTypes,
	}.Build()
	File_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto = out.File
	file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_rawDesc = nil
	file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_goTypes = nil
	file_commonfate_leastprivilege_v1alpha1_entitlement_usage_proto_depIdxs = nil
}
